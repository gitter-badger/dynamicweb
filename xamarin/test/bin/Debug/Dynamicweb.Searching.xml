<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamicweb.Searching</name>
    </assembly>
    <members>
        <member name="T:Dynamicweb.Searching.IndexEntryFieldInfo">
            <summary>
            Represents an index entry field information.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntryFieldInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">Field name.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntryFieldInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntryFieldInfo.Name">
            <summary>
            Gets the field name.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntryFieldInfo.Value">
            <summary>
            Gets or sets field value.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntryFieldInfo.Boost">
            <summary>
            Gets or Sets a boost factor.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntryFieldInfo.Store">
            <summary>
            Gets or sets value indicating whether to store the field value in the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntryFieldInfo.Tokenize">
            <summary>
            Gets or sets value indicating whether to tokenize the field.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntryFieldInfo.UseTermVector">
            <summary>
            Gets or sets value indicating whether to apply term vertor to the specified field.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexEntrySurrogate">
            <summary>
            Represents an index entry surrogate.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexEntry">
            <summary>
            Represents a single index entry.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="uniqueID">Unique ID of the entry.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="id">Entry ID.</param>
            <param name="typeID">Entry type ID.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.#ctor(Dynamicweb.Searching.IndexEntry)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="copyFrom">Another instance of <see cref="T:Dynamicweb.Searching.IndexEntry">IndexEntry</see> object to copy data from.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.GetValue(System.String)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="name">Field name.</param>
            <returns>Field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.GetValue``1(System.String)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <typeparam name="T">Field type.</typeparam>
            <param name="name">Field name.</param>
            <returns>Field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.GetValue(System.Type,System.String)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="fieldType">Field type.</param>
            <param name="name">Field name.</param>
            <returns>Field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.SetValue(System.String,System.String)">
            <summary>
            Sets the value for the specified field.
            </summary>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.SetValue``1(System.String,``0)">
            <summary>
            Sets the value for the specified field.
            </summary>
            <typeparam name="T">Field type.</typeparam>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.SetValue(System.Type,System.String,System.Object)">
            <summary>
            Sets the value for the specified field.
            </summary>
            <param name="fieldType">Field type.</param>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.SetIdentityFields(System.String,System.String,System.String)">
            <summary>
            Persists identity fields on the current index entry.
            </summary>
            <param name="id">Entry ID.</param>
            <param name="typeID">Entry Type ID.</param>
            <param name="uniqueID">Entry Unique ID (can be empty).</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.ContainsField(System.String)">
            <summary>
            Determines whether entry contains specified field.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value indicating whether entry contains specified field.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.IsSystemField(System.String)">
            <summary>
            Determines whether specified field is a system field.
            </summary>
            <param name="name">Field name.</param>
            <returns>Value indicating whether specified field is a system field.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.Fill(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Fills the index entry with the information from the specified collection of fields.
            </summary>
            <param name="fields">A collection of key-value pairs to be applied to the current entry.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.InitializeField(System.String,System.String)">
            <summary>
            Performs field initialization prior indexing.
            </summary>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
            <returns>Field information.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.CreateSummary">
            <summary>
            Creates summary for the specified entry.
            </summary>
            <returns>Summary text.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.GetSummaryValue(System.String)">
            <summary>
            Gets the value of the specified field suitable for the summary.
            </summary>
            <param name="name">Name of the field.</param>
            <returns>Field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.GetSystemFieldName(Dynamicweb.Searching.IndexEntrySystemField)">
            <summary>
            Retrieves a name of the specified system field.
            </summary>
            <param name="field">System field.</param>
            <returns>The name of the system field.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.AsDocument(System.Boolean)">
            <summary>
            Converts current index entry into the Lucene document.
            </summary>
            <param name="createSumaryField">Indicates whether to create summary field (which holds all entry contents).</param>
            <returns>Created document.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntry.EntryToDocument(Dynamicweb.Searching.IndexEntry,System.Boolean)">
            <summary>
            Converts the given index entry into the Lucene document.
            </summary>
            <param name="e">Index entry.</param>
            <param name="createSummaryField">Indicates whether to create summary field (which holds all entry contents).</param>
            <returns>Created document.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.ID">
            <summary>
            Gets or sets an ID of the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.TypeID">
            <summary>
            Gets or sets a type ID of the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.UniqueID">
            <summary>
            Gets or sets the unique ID of the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.IndexerID">
            <summary>
            Gets or sets an ID of the indexer by whom the entry has been provided.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.Name">
            <summary>
            Gets or sets the name of the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.Description">
            <summary>
            Gets or sets the description of the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.Summary">
            <summary>
            Gets the summary from all entry fields.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.Count">
            <summary>
            Gets the number of fields currently set on the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.FieldNames">
            <summary>
            Gets the list of all field names.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.Fields">
            <summary>
            Gets the collection of all fields.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.UniqueIDSeparator">
            <summary>
            Gets the character used to separate parts of the entry's unique ID.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.SystemIdentityFieldNames">
            <summary>
            Gets a list of system identity fields.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.SystemFieldNames">
            <summary>
            Gets the list of all system field names.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntry.Culture">
            <summary>
            Gets or sets the information about the culture which is used for culture-sensitive operations (like, converting values when indexing them).
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySurrogate._surrogates">
            <summary>
            Gets the surrogate mappings.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate.#cctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate.GetSurrogateOrActual(Dynamicweb.Searching.IndexEntry)">
            <summary>
            Returns a surrogate for a given index entry or an actual index entry if surrogate was not found.
            </summary>
            <param name="entry">Actual index entry.</param>
            <returns>Surrogate for a given entry or an actual index entry if surrogate was not found.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="entry">entry</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate.GetSurrogate(Dynamicweb.Searching.IndexEntry)">
            <summary>
            Returns a surrogate for a given index entry.
            </summary>
            <param name="entry">Actual index entry.</param>
            <returns>Surrogate for a given entry.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="entry">entry</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate.HasSurrogate``1">
            <summary>
            Determines whether there's a surrogate registered for a given index entry.
            </summary>
            <typeparam name="T">Actual index entry type.</typeparam>
            <returns>Value indicating whether there's a surrogate registered for a given index entry.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate.HasSurrogate(System.Type)">
            <summary>
            Determines whether there's a surrogate registered for a given index entry.
            </summary>
            <param name="entryType">Actual entry type.</param>
            <returns>Value indicating whether there's a surrogate registered for a given index entry.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.IndexEntrySurrogate`1">
            <summary>
            Represents an index entry surrogate.
            </summary>
            <typeparam name="T">Actual index entry type.</typeparam>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate`1.#ctor(`0)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="entry">Actual entry.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="entry">entry</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate`1.GetValue(System.Type,System.String)">
            <summary>
            Gets the value of the specified field.
            </summary>
            <param name="fieldType">Field type.</param>
            <param name="name">Field name.</param>
            <returns>Field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate`1.SetValue(System.Type,System.String,System.Object)">
            <summary>
            Sets the value for the specified field.
            </summary>
            <param name="fieldType">Field type.</param>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate`1.Fill(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Fills the index entry with the information from the specified collection of fields.
            </summary>
            <param name="fields">A collection of key-value pairs to be applied to the current entry.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate`1.InitializeField(System.String,System.String)">
            <summary>
            Performs field initialization prior indexing.
            </summary>
            <param name="name">Field name.</param>
            <param name="value">Field value.</param>
            <returns>Field information.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexEntrySurrogate`1.GetSummaryValue(System.String)">
            <summary>
            Gets the value of the specified field suitable for the summary.
            </summary>
            <param name="name">Name of the field.</param>
            <returns>Field value.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntrySurrogate`1.Entry">
            <summary>
            Gets the actual entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntrySurrogate`1.Fields">
            <summary>
            Gets the collection of all fields.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexEntrySurrogate`1.Culture">
            <summary>
            Gets or sets the information about the culture which is used for culture-sensitive operations (like, converting values when indexing them).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerDataRetrievalOptions">
            <summary>
            Represents a data retrieval options for the indexer.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerDataRetrievalOptions.MaxPageSize">
            <summary>
            Gets the the value of the page size representing a page which is as large as possible to accept all items.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerDataRetrievalOptions.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRetrievalOptions.SupportsPagedRetrieval">
            <summary>
            Gets or sets value indicating whether indexer supports paged data retrieval.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRetrievalOptions.PageSize">
            <summary>
            Gets or sets the size of the page that is retrieved on each update operation 
            (only makes sence when "SupportsPagedRetrieval" is set to "true").
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRetrievalOptions.EnableQueue">
            <summary>
            Gets or sets value indicating whether indexer allows items that are modified to be queued for indexing.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerDataRequest">
            <summary>
            Provides information about what data should be retrieved by the indexer.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerDataRequest.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerDataRequest.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem})">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="queue">Queued data.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerDataRequest.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},System.Int32)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="queue">Queued data.</param>
            <param name="page">Page number (in case of paged data retrieval).</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRequest.Queue">
            <summary>
            Gets or sets the information about the queued data.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRequest.QueueContentType">
            <summary>
            Gets the content type of the queued data.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRequest.IsFullUpdate">
            <summary>
            Gets or sets value indicating whether full update is performed.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerDataRequest.Page">
            <summary>
            Gets or sets the page number (in case of paged data retrieval).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerIdentityAttribute">
            <summary>
            Provides meta-information about an indexer.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerIdentityAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="id">The unique ID of the indexer.</param>
            <param name="path">The path toe the data that needs to be indexed.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerIdentityAttribute.ID">
            <summary>
            Gets the unique ID of the indexer.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerIdentityAttribute.Path">
            <summary>
            Gets the path to the data that needs to be indexed.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerInfo">
            <summary>
            Represents an information about an indexer.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerInfo.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerInfo.ID">
            <summary>
            Gets the indexer ID.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerInfo.Path">
            <summary>
            Gets the relative path to the index managed by an indexer.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueueItemSelector">
            <summary>
            Indicates that the corresponding queue item represents a range of either updated or deleted items.
            This class provides an information required to resolve an actual queue items from the single one.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItemSelector.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItemSelector.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="field">Field name.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItemSelector.Field">
            <summary>
            Gets or sets the name of the field.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItemSelector.Value">
            <summary>
            Gets or sets the field value.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueueItemState">
            <summary>
            Represents a queue item state.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueItemState.Updated">
            <summary>
            Specified item already exists in the index and needs to be updated.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueItemState.New">
            <summary>
            Specified item doesn't exist in the idnex and needs to be added.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueItemState.Deleted">
            <summary>
            Specified item needs to be deleted from the index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueueItem">
            <summary>
            Represents an indexer queue item.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItem.#ctor(Dynamicweb.Searching.IndexerQueueItem)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="copyFrom">Another instance of <see cref="T:Dynamicweb.Searching.IndexerQueueItem">IndexerQueueItem</see> object to copy data from.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItem.#ctor(Dynamicweb.Searching.IndexEntry)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="entry">Index entry.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItem.#ctor(Dynamicweb.Searching.IndexEntry,Dynamicweb.Searching.IndexerQueueItemState)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="entry">Index entry.</param>
            <param name="state">The state of the entry.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItem.#ctor(Dynamicweb.Searching.IndexEntry,Dynamicweb.Searching.IndexerQueueItemState,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="entry">Index entry.</param>
            <param name="state">The state of the entry.</param>
            <param name="isPartiallyPersisted">
            Value indicating whether corresponding entry is partially filled in 
            and needs to be "refreshed" before the indexing process will take place.
            </param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueItem.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the object to the given XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItem.Entry">
            <summary>
            Gets an index entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItem.State">
            <summary>
            Gets or sets the state of the entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItem.Selector">
            <summary>
            Gets or sets an information required to resolve an actual queue items from the single ("extendible") one.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItem.IsPartiallyPersisted">
            <summary>
            Gets or sets value indicating whether corresponding index entry is partially persisted in the queue in 
            and needs to be filled with an actual data before the indexing process will take place.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueItem.IsExtendible">
            <summary>
            Gets value indicating whether this item is extendible (represents a range of other items).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.AddInManagerWrapper">
            <summary>
            Represents a wrapper around Dynamicweb AddInManager object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.AddInManagerWrapper.GetAddInClasses(System.Type)">
            <summary>
            Retrieves a list of all types that derive from the specified base type.
            </summary>
            <param name="baseType">Base type.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.AddInManagerWrapper.CreateAddInInstance(System.Type)">
            <summary>
            Creates an instance of the specified type.
            </summary>
            <param name="t">Type to create instance from.</param>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Searching.IndexModificationResult">
            <summary>
            Provides information about accomplished index modifications.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.Append(Dynamicweb.Searching.IndexModificationResult)">
            <summary>
            Appends specified modificaions results to the current instance.
            </summary>
            <param name="item">Modifications results to append.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.AppendTarget(System.String)">
            <summary>
            Appends specified target ID to the list of target IDs.
            </summary>
            <param name="id">Target ID.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.AppendTarget(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends specified range of target IDs to the list of currently target IDs.
            </summary>
            <param name="ids">Range of target IDs.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.AppendAffected(System.String)">
            <summary>
            Appends specified ID to the list of affected IDs.
            </summary>
            <param name="id">Affected ID.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.AppendAffected(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends specified range of affected IDs to the list of currently affected IDs.
            </summary>
            <param name="ids">Range of affected IDs.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.GetMissing(System.Int32)">
            <summary>
            Retrieves a list of IDs that were intended to be updated but weren't actually affected by the modification procedure.
            <param name="max">Maximum number of items to retrieve.</param>
            <returns>A list of IDs</returns>
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.ContainsTarget(System.String)">
            <summary>
            Gets value indicating whether specified ID exists among the list of target IDs.
            </summary>
            <param name="id">ID to check.</param>
            <returns>Value indicating whether specified ID exists among the list of target IDs.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexModificationResult.ContainsAffected(System.String)">
            <summary>
            Gets value indicating whether specified ID exists among the list of affected IDs.
            </summary>
            <param name="id">ID to check.</param>
            <returns>Value indicating whether specified ID exists among the list of affected IDs.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.IndexModificationResult.Target">
            <summary>
            Gets the list of index entry IDs that needs to be updated/deleted.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexModificationResult.Affected">
            <summary>
            Gets the list of entry IDs that were actually affected by the index modification procedure.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexModificationResult.TimeElapsed">
            <summary>
            Gets the time period during which the index was being updated.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.IndexDirectoryEx">
            <summary>
            Represents a wrapper around Lucene file-system directory.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexDirectoryEx.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Physical path of the directory.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexDirectoryEx.Close">
            <summary>
            Closes the directory.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexDirectoryEx.Dispose">
            <summary>
            Disposes managed resources.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.IndexDirectoryEx.Directory">
            <summary>
            Gets the actual directory file-system directory.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.IndexHitCountCollector">
            <summary>
            Represents a collector that simply counts the number of search results.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Internal.IndexHitCountCollector._count">
            <summary>
            Gets the number of search results.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexHitCountCollector.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexHitCountCollector.Collect(System.Int32)">
            <summary>
            Collects the document.
            </summary>
            <param name="doc">Document number.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexHitCountCollector.SetNextReader(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>
            Assigns index reader to a given collector.
            </summary>
            <param name="reader">Reader.</param>
            <param name="docBase">Document base.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexHitCountCollector.SetScorer(Lucene.Net.Search.Scorer)">
            <summary>
            Assigns scorer to a given collection.
            </summary>
            <param name="scorer">Scorer.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.IndexHitCountCollector.Count">
            <summary>
            Gets the total number of search results.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.IndexHitCountCollector.AcceptsDocsOutOfOrder">
            <summary>
            Gets value indicating whether collector accepts documents out of order.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.IndexReaderUtils">
            <summary>
            Provides methods for reading from the index. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexReaderUtils.Filter``1(Lucene.Net.Index.IndexReader,Lucene.Net.Search.TopDocs,Dynamicweb.Searching.Queries.SearchQuery,System.Boolean)">
            <summary>
            Filters the given results according to the "Selecting" query event handlers.
            </summary>
            <typeparam name="T">Index entry type.</typeparam>
            <param name="reader">Index reader.</param>
            <param name="hits">Hits.</param>
            <param name="query">Query.</param>
            <param name="poke">Indicates whether to only ensure there're at least one item that can be selected and skip furgher selection if the there's.</param>
            <returns>Filtered results.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexReaderUtils.Read``1(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>
            Reads the specified document by using the index reader and returns the corresponding index entry.
            </summary>
            <typeparam name="T">Index entry type.</typeparam>
            <param name="reader">Index reader.</param>
            <param name="index">Document index.</param>
            <returns>Index entry instance.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexReaderUtils.Convert``1(Lucene.Net.Documents.Document)">
            <summary>
            Converts the given document into the index entry.
            </summary>
            <typeparam name="T">Index entry type.</typeparam>
            <param name="document">Results.</param>
            <returns>Index entry instance.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexReaderUtils.Convert``1(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Converts the given document into the index entry.
            </summary>
            <typeparam name="T">Index entry type.</typeparam>
            <param name="fields">Results.</param>
            <returns>Index entry instance.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexReaderUtils.GetFields(Lucene.Net.Documents.Document)">
            <summary>
            Returns document fields.
            </summary>
            <param name="document">Results.</param>
            <returns>Document fields.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.LuceneQueryCompiler">
            <summary>
            Allows transforming search queries into Lucene Query object.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.IQueryCompiler`1">
            <summary>
            Represents a query compiler.
            </summary>
            <typeparam name="T">Compiled query object.</typeparam>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.IQueryCompiler`1.Compile(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Compiles the given search query and returns the compilation result.
            </summary>
            <param name="query">Query to compile.</param>
            <returns>Compilation result.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            <param name="path">Relative path to the index.</param>
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.#ctor(Lucene.Net.Search.RewriteMethod,System.String)">
            <summary>
            Initializes a new instance of an object.
            <param name="rewritMethod">Rewrite method.</param>
            <param name="path">Relative path to the index.</param>
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.#ctor(Lucene.Net.Search.RewriteMethod,Dynamicweb.Searching.IAnalysisProvider)">
            <summary>
            Initializes a new instance of an object.
            <param name="rewritMethod">Rewrite method.</param>
            <param name="analysisProvider">The index analizer info.</param>
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.Compile(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Compiles the given search query and returns the compilation result.
            </summary>
            <param name="query">Query to compile.</param>
            <returns>Compilation result.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.ResetVolatiles">
            <summary>
            Resets all volatiles of the previously compiled query.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.UpdateVolatiles">
            <summary>
            Updates the volatiles of the previously compiled query.
            </summary>
            <returns>Value indicating whether any of the volatiles were updated.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileGroup(Dynamicweb.Searching.Queries.ICompositeElement)">
            <summary>
            Compiles the given group.
            </summary>
            <param name="group">Group to compile.</param>
            <returns>Compiled group.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileToClause(Dynamicweb.Searching.Queries.SearchQueryElement,Lucene.Net.Search.Occur)">
            <summary>
            Compiles the given search query element into the boolean clause.
            </summary>
            <param name="element">Element to compile.</param>
            <param name="occurence">Parsed occurence.</param>
            <returns>Compiled element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileToClause(Dynamicweb.Searching.Queries.SearchQueryElement,Lucene.Net.Search.Occur,System.Boolean)">
            <summary>
            Compiles the given search query element into the boolean clause.
            </summary>
            <param name="element">Element to compile.</param>
            <param name="occurence">Parsed occurence.</param>
            <param name="registerVolatile">Value indicating whether to register a volatile element.</param>
            <returns>Compiled element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileCriteria(Dynamicweb.Searching.Queries.Criterias.Criteria,Lucene.Net.Search.Occur)">
            <summary>
            Returns the query for a given criteria.
            </summary>
            <param name="element">Criteria to return query for.</param>
            <param name="occurence">Parsed occurence.</param>
            <returns>Query for a given criteria.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileBoostCriteria(Dynamicweb.Searching.Queries.Criterias.BoostCriteria,Lucene.Net.Search.Occur)">
            <summary>
            Returns the query for a given criteria.
            </summary>
            <param name="element">Criteria to return query for.</param>
            <param name="occurence">Parsed occurence.</param>
            <returns>Query for a given criteria.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileRangeCriteria(Dynamicweb.Searching.Queries.Criterias.RangeCriteria,Lucene.Net.Search.Occur)">
            <summary>
            Returns the query for a given range criteria.
            </summary>
            <param name="element">Range criteria.</param>
            <param name="occurence">Parsed occurence.</param>
            <returns>Query for a given range criteria.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileFuzzyCriteria(Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria,Lucene.Net.Search.Occur)">
            <summary>
            Returns the query for a given fuzzy criteria.
            </summary>
            <param name="element">Criteria.</param>
            <param name="occurence">Parsed occurence.</param>
            <returns>Query for a given range criteria.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompileProximityCriteria(Dynamicweb.Searching.Queries.Criterias.ProximityCriteria,Lucene.Net.Search.Occur)">
            <summary>
            Returns the query for a given proximity criteria.
            </summary>
            <param name="element">Criteria.</param>
            <param name="occurence">Parsed occurence.</param>
            <returns>Query for a given range criteria.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.GetTerms(System.String,System.Object)">
            <summary>
            Returns the list of terms based on the given field name and value.
            </summary>
            <param name="field">Field name.</param>
            <param name="value">Field value.</param>
            <returns>A list of terms.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.GetTerms(System.String,System.Object,System.Boolean)">
            <summary>
            Returns the list of terms based on the given field name and value.
            </summary>
            <param name="field">Field name.</param>
            <param name="value">Field value.</param>
            <param name="isWrapped">Is field value was wrapped with ".</param>
            <returns>A list of terms.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.FilterElements(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.Queries.SearchQueryElement})">
            <summary>
            Filters the given collection of query elements.
            </summary>
            <param name="elements">Elements to filter.</param>
            <returns>Filtered elements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.FilterValue(System.String,System.String)">
            <summary>
            Filters term value.
            </summary>
            <param name="field">Field name.</param>
            <param name="value">Term value.</param>
            <returns>Filtered value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.Sanitize(System.String)">
            <summary>
            Removes any spaces, quotes or leading wildcard characters from the given value.
            </summary>
            <param name="value">Value to sanitize.</param>
            <returns>Sanitized value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.Sanitize(System.String,System.Boolean)">
            <summary>
            Removes any spaces, quotes or leading wildcard characters from the given value.
            </summary>
            <param name="value">Value to sanitize.</param>
            <param name="preventWildcardCriterion">Value indicating whether to exclude wildcards from the criterion value.</param>
            <returns>Sanitized value.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.RewriteMethod">
            <summary>
            Gets or sets the rewrite method for wildcard, prefix and range queries.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.Analyzer">
            <summary>
            Gets or sets the target analyzer.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.TermsCache">
            <summary>
            Gets or sets the terms cache.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.Volatiles">
            <summary>
            Gets or sets the volatiles.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.AnalysisOptions">
            <summary>
            Gets or sets the analysis options.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompiledVolatileClause">
            <summary>
            Represents an information about compiled volatile clause.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompiledVolatileClause.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompiledVolatileClause.#ctor(Lucene.Net.Search.BooleanClause,Lucene.Net.Search.Occur,Dynamicweb.Searching.Queries.VolatileQueryElement)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="clause">The clause.</param>
            <param name="occurence">The occurence.</param>
            <param name="volat">Volatile.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompiledVolatileClause.Clause">
            <summary>
            Gets or sets the clause.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompiledVolatileClause.Occurence">
            <summary>
            Gets or sets the occurence.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Internal.LuceneQueryCompiler.CompiledVolatileClause.Volatile">
            <summary>
            Gets or sets the volatile.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.BulkIndexSearchParameters`1">
            <summary>
            Represents a bulk index search parameters.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.BulkIndexSearchParameters`1.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.BulkIndexSearchParameters`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="keys">The keys for groupping result sets.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.BulkIndexSearchParameters`1.Keys">
            <summary>
            Gets or sets the keys for groupping result sets.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.BulkIndexSearchParameters`1.Valid">
            <summary>
            Gets value indicating whether parameters are valid.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.CommaAnalyzer">
            <summary>
            An analyzer of type comma that is built using a Comma Tokenizer.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.CommaTokenizer">
            <summary>
            Simple tokenizer that splits the text stream on comma and returns sequences of non-whitespace characters as tokens. Note that any punctuation will be included in the tokenization.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.ConfigurationManager">
            <summary>
            Represents a configuration manager.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.SyncLock">
            <summary>
            Gets the lock object that is used to synchronize access to the configuration manager from multiple threads.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.GetProviders(System.String)">
            <summary>
            Returns a list of configuration providers for a given index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>A list of configuration providers for a given index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.GetProvider(System.String,System.Type)">
            <summary>
            Returns specified configuration provider.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="providerType">Configuration provider type.</param>
            <returns>Specified configuration provider.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.GetProvider``1(System.String)">
            <summary>
            Returns specified configuration provider.
            </summary>
            <typeparam name="T">Configuration provider type.</typeparam>
            <param name="path">Relative path to the index.</param>
            <returns>Specified configuration provider.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.GetSettings(Dynamicweb.Searching.Management.Configuration.ConfigurationProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.GetAllProviders">
            <summary>
            Returns a list of all configuration providers.
            </summary>
            <returns>A list of all configuration providers.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.GetConfigurationProperties(System.Type)">
            <summary>
            Returns a list of configuraion properties for a given provider type.
            </summary>
            <param name="providerType">Provider type.</param>
            <returns>A list of configuraion properties for a given provider type.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.Current">
            <summary>
            Gets the current instance of the configuration manager.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.ConfigurationManager.AllProviders">
            <summary>
            Gets the list of all configuration providers groupped by the relative path to the index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.ConfigurationProvider">
            <summary>
            Represents a configuration provider.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationProvider.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationProvider.Initialize">
            <summary>
            Initializes provider by loading configuration settings from the persistent storage.
            </summary>
            <returns>Loaded settings.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationProvider.Save">
            <summary>
            Saves current settings into the persistent storage.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationProvider.GetSettings">
            <summary>
            Returns a collection of configuration settings for a given provider.
            </summary>
            <returns>A collection of configuration settings for a given provider.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.ConfigurationTargetAttribute">
            <summary>
            Indicates that the target object provides configuration support for a given index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationTargetAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Relative path to the index.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.ConfigurationTargetAttribute.Path">
            <summary>
            Gets the relative path to the index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.StopWordAction">
            <summary>
            Represents a stop word action.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Configuration.StopWordAction.Use">
            <summary>
            Use this stop word.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Configuration.StopWordAction.Ignore">
            <summary>
            Ignore this stop word (do not use it).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.StopWord">
            <summary>
            Represents a stop word.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWord.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWord.#ctor(System.String,Dynamicweb.Searching.Management.Configuration.StopWordAction)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="text">Stop word text.</param>
            <param name="action">Stop word action.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWord.#ctor(Dynamicweb.Searching.Management.Configuration.StopWord)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="copyFrom">Object to copy state from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="copyFrom">copyFrom</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWord.CopyTo(Dynamicweb.Searching.Management.Configuration.StopWord)">
            <summary>
            Copies the state of the current object into the given one.
            </summary>
            <param name="target">Object to copy state into.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target">target</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWord.ToString">
            <summary>
            Returns a string representation of the current object.
            </summary>
            <returns>A string representation of the current object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWord.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Writes the object to the given XML writer.
            </summary>
            <param name="writer">XML writer.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWord.Action">
            <summary>
            Gets or sets the stop word action.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWord.Text">
            <summary>
            Gets or sets the stop word text.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.StopWordSource">
            <summary>
            Represents a stop word source.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Relative path to the index.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.Add(System.String,Dynamicweb.Searching.Management.Configuration.StopWordAction)">
            <summary>
            Adds a new stop word.
            </summary>
            <param name="text">Stop word text.</param>
            <param name="action">Stop word action.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.Add(Dynamicweb.Searching.Management.Configuration.StopWord)">
            <summary>
            Adds a new stop word.
            </summary>
            <param name="word">Stop word to add.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.Remove(System.String)">
            <summary>
            Removes the given stop word.
            </summary>
            <param name="text">Stop word text.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.Commit(Dynamicweb.Searching.Management.Configuration.StopWord,Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordSourceAction)">
            <summary>
            Commits changes to the file.
            </summary>
            <param name="word">Stop word.</param>
            <param name="action">Action.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWordSource.Path">
            <summary>
            Gets the relative path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWordSource.Words">
            <summary>
            Gets the list of all stop words.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordSourceAction">
            <summary>
            Represents a stop word source action.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordSourceAction.Add">
            <summary>
            Adds new word.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordSourceAction.Remove">
            <summary>
            Removes existing word.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator">
            <summary>
            Represents a stop words enumerator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Relative path to the index.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.Dispose">
            <summary>
            Disposes all resources used by this enumerator.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.MoveNext">
            <summary>
            Moves the enumerator to the next element.
            </summary>
            <returns>Value indicating whether next element is available.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.Reset">
            <summary>
            Resets the state of this enumerator.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.InitializeReader">
            <summary>
            Initializes the XML reader.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.Path">
            <summary>
            Gets the relative path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.Current">
            <summary>
            Gets the current element.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordsEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordIterator">
            <summary>
            Represents a stop words iterator. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordIterator.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Relative path to the index.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordIterator.GetEnumerator">
            <summary>
            Returns an enumerator object that allows iterating over collection elements.
            </summary>
            <returns>An enumerator object that allows iterating over collection elements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordIterator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator object that allows iterating over collection elements.
            </summary>
            <returns>An enumerator object that allows iterating over collection elements.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.StopWordSource.StopWordIterator.Path">
            <summary>
            Gets the relative path to the index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexAnalysisOptions">
            <summary>
            Represents an index analysis options.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalysisOptions.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalysisOptions.ToAnalyzer(System.Collections.Generic.ISet{System.String})">
            <summary>
            Converts the current options to Lucene analyzer.
            </summary>
            <param name="stopWords">A list of stop words (required by some analyzers).</param>
            <returns>Lucene analyzer.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalysisOptions.AnalyzerFromName(System.String,System.String,System.Collections.Generic.ISet{System.String})">
            <summary>
            Creates the given the Lucene analyzer.
            </summary>
            <param name="name">Analyzer name.</param>
            <param name="fallbackName">Additional analyzer name to be used as fallback.</param>
            <param name="stopWords">A list of stop words (required by some analyzers).</param>
            <returns>Lucene analyzer.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexAnalysisOptions.Default">
            <summary>
            Gets or sets the default analyzer.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexAnalysisOptions.Fields">
            <summary>
            Gets or sets the per-field analyzers.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexAnalyzer">
            <summary>
            Represents an analyzer that is used for both indexing and querying.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">Analyzer name.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.ToString">
            <summary>
            Returns a string representation of the current object.
            </summary>
            <returns>A string representation of the current object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.CreateStandard">
            <summary>
            Creates new standard analyzer.
            </summary>
            <returns>Analyzer.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.CreateKeyword">
            <summary>
            Creates new keyword analyzer which treats the entire field value as a single token.
            </summary>
            <returns>Analyzer.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.CreateSimple">
            <summary>
            Creates new simple analyzer which uses simple filters for tokenizing field value.
            </summary>
            <returns>Analyzer.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.CreateStop">
            <summary>
            Creates new simple analyzer which uses a combination of simple filters and a predefined set of stop words for tokenizing field value.
            </summary>
            <returns>Analyzer.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.CreateWhitespace">
            <summary>
            Creates new simple analyzer which uses a whitespace filter for tokenizing field value.
            </summary>
            <returns>Analyzer.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexAnalyzer.CreateComma">
            <summary>
            Creates new simple analyzer which uses a comma filter for tokenizing field value.
            </summary>
            <returns>Analyzer.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexAnalyzer.Name">
            <summary>
            Gets or sets the name of the analyzer.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexFieldValueConverter">
            <summary>
            Provides methods for converting values into their indexed representation and back.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexFieldValueConverter.BaseDate">
            <summary>
            Gets the minimum allowed value for all date-fields. 
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexFieldValueConverter.NumericFieldBaseSize">
            <summary>
            Gets the length of numeric-fields (excluding decimal part and positive/negative sign).
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.StringToObject``1(System.String)">
            <summary>
            Converts specified indexed field value into an actual object.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="value">Value.</param>
            <returns>Actual object instance.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.StringToObject(System.Type,System.String)">
            <summary>
            Converts specified indexed field value into an actual object.
            </summary>
            <param name="t">Value type.</param>
            <param name="value">Value.</param>
            <returns>Actual object instance.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.DefaultValue(System.Type)">
            <summary>
            Gets the default value for specified type.
            </summary>
            <param name="t">Type to get default value for.</param>
            <returns>Default value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.ObjectToString``1(``0)">
            <summary>
            Converts specified object into the indexed field value.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="value">Value.</param>
            <returns>Indexed field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.ObjectToString``1(``0,System.Globalization.CultureInfo)">
            <summary>
            Converts specified object into the indexed field value.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="value">Value.</param>
            <param name="valueCulture">The culture-specific information about the value (if available).</param>
            <returns>Indexed field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.ObjectToString(System.Type,System.Object)">
            <summary>
            Converts specified object into the indexed field value.
            </summary>
            <param name="t">Value type.</param>
            <param name="value">Value.</param>
            <returns>Indexed field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.ObjectToString(System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts specified object into the indexed field value.
            </summary>
            <param name="t">Value type.</param>
            <param name="value">Value.</param>
            <param name="valueCulture">The culture-specific information about the value (if available).</param>
            <returns>Indexed field value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexFieldValueConverter.IsIndexedNumber(System.String)">
            <summary>
            Gets value indicating whether specified value represents an indexed numeric value.
            </summary>
            <param name="value">Value to examine.</param>
            <returns>Value indicating whether specified value represents an indexed numeric value.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.ReflectionHelper">
            <summary>
            Provides methods for working with unreferenced code.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetAssembly(System.String)">
            <summary>
            Gets an assembly by name.
            </summary>
            <param name="name">Name of the assembly.</param>
            <returns>Assembly instance.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetType(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the type.
            </summary>
            <param name="asm">Assembly to search in.</param>
            <param name="name">Name of the type.</param>
            <returns>Type information.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetMembers``1(System.String,System.String,System.String)">
            <summary>
            Gets the list of members.
            </summary>
            <typeparam name="T">Member type.</typeparam>
            <param name="assemblyName">Assembly to search in.</param>
            <param name="typeName">Type name.</param>
            <param name="memberName">Member name.</param>
            <returns>A list of members.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.CheckMethod(System.Reflection.MethodInfo,System.Type,System.Type[])">
            <summary>
            Checks whether specified method has specified signature.
            </summary>
            <param name="method">Method to check.</param>
            <param name="returnType">Expected return value.</param>
            <param name="parameters">Expected incoming parameters.</param>
            <returns>Value indicating whether method comply with all requirements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetMembers(System.Type,System.String)">
            <summary>
            Gets type members that matches specified name.
            </summary>
            <param name="t">Object type.</param>
            <param name="name">Name of the member.</param>
            <returns>An array of members that matches specified name.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.InvokeStaticMethod``1(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Performs static method invocation.
            </summary>
            <typeparam name="T">Return value type.</typeparam>
            <param name="m">Method to invoke.</param>
            <param name="args">Method arguments.</param>
            <returns>Methor return value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetCustomAttributes``1(System.Type)">
            <summary>
            Gets the list of custom attributes on a given type.
            </summary>
            <typeparam name="T">Type of custom attribute.</typeparam>
            <param name="t">Type of an object.</param>
            <returns>An array of custom attributes.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetCustomAttributes``1(System.Reflection.PropertyInfo)">
            <summary>
            Gets the list of custom attributes on a given property.
            </summary>
            <typeparam name="T">Type of custom attribute.</typeparam>
            <param name="prop">Object property.</param>
            <returns>An array of custom attributes.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.GetCollectionElementType(System.Type)">
            <summary>
            Returns a type of an element if the target type represents a strongly typed collection. 
            </summary>
            <param name="t">Type to examine.</param>
            <returns>A type of an element if the target type represents a strongly typed collection.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.ReflectionHelper.AssignPrivateField(System.String,System.Object,System.Object)">
            <summary>
            Assigns value to specified private field.
            </summary>
            <param name="name">Field name.</param>
            <param name="o">Object instance.</param>
            <param name="value">Field value.</param>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.TextUtils">
            <summary>
            Supply functionality to work with the text.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.TextUtils.GetBoundaries(System.String,System.String[])">
            <summary>
            Retrieves an arry containing two indexes representing a boundaries that include specified terms within specified phrase.
            </summary>
            <param name="phrase">Phrase to examine.</param>
            <param name="terms">Terms to search for.</param>
            <returns>An arry containing two indexes representing a boundaries that include specified terms within specified phrase.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.TextUtils.GetProminentTerms(System.String,System.String[],System.Char[],System.Int32)">
            <summary>
            Retrieves a list of terms based on a given phrase in the order of their prominence comparing to known terms.
            </summary>
            <param name="phrase">Phrase to examine.</param>
            <param name="knownTerms">Known terms.</param>
            <param name="boundCharacters">Boundary characters that are used to split phrase into terms.</param>
            <param name="stopWordLength">Minimum length of the term.</param>
            <returns>A list of terms in the order of their prominence.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.TextUtils.PunctuationExtendBoundaries(System.String,System.Int32[])">
            <summary>
            Extends suggested phrase boundaries according to unclosed punctuation characters in a target segment.
            </summary>
            <param name="phrase">Original phrase.</param>
            <param name="boundaries">Original suggested phrase boundaries.</param>
            <returns>Extended boundaries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.TextUtils.GetSegment(System.String,System.Int32[])">
            <summary>
            Retrieves a segment of the text.
            </summary>
            <param name="phrase">Text to examine.</param>
            <param name="boundaries">Segment boundaries.</param>
            <returns>Segment of the text.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.TextUtils.IsNumeric(System.String)">
            <summary>
            Gets value indicating whether specified string represents a numeric value.
            </summary>
            <param name="s">String to examine.</param>
            <returns>Value indicating whether specified string represents a numeric value.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogProviderConstraintAttribute">
            <summary>
            Provides meta-information about restrictions that should be applied for the specified log provider.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProviderConstraintAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">The relative path to the target index.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderConstraintAttribute.Path">
            <summary>
            Gets the relative path to the target index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute">
            <summary>
            Provides meta-information about a single log provider.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="id">The unique ID of the provider.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="id">The unique ID of the provider.</param>
            <param name="name">The user-friendly name of the provider.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="id">The unique ID of the provider.</param>
            <param name="name">The user-friendly name of the provider.</param>
            <param name="isUIVisible">Value indicating whether log provider is visible in the backend UI.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute.ID">
            <summary>
            Gets the unique ID of the provider.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute.Name">
            <summary>
            Gets the user-friendly name of the provider.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderIdentityAttribute.IsUIVisible">
            <summary>
            Gets value indicating whether log provider is visible in the backend UI.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogHandler">
            <summary>
            Provides properties and methods for managing logs.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="index">Relative path to the target index.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.Start">
            <summary>
            Starts new log session.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.End">
            <summary>
            Ends current log session.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.Write(Dynamicweb.Searching.Management.Logging.LogEntryMessageType,Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode,System.Object)">
            <summary>
            Causes all log provides to add new log entry.
            </summary>
            <param name="type">Message type.</param>
            <param name="code">Message code.</param>
            <param name="state">Environment state.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.Write(Dynamicweb.Searching.Management.Logging.LogEntryMessageType,System.String,System.Object)">
            <summary>
            Causes all log provides to add new log entry.
            </summary>
            <param name="type">Message type.</param>
            <param name="message">Message text.</param>
            <param name="state">Environment state.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.Write(Dynamicweb.Searching.Management.Logging.LogEntryMessageType,Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode,System.Object,System.DateTime)">
            <summary>
            Causes all log provides to add new log entry.
            </summary>
            <param name="type">Message type.</param>
            <param name="code">Message code.</param>
            <param name="state">Environment state.</param>
            <param name="timeStamp">Timestamp of the event.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.Write(Dynamicweb.Searching.Management.Logging.LogEntry)">
            <summary>
            Causes all log providers to add new log entry.
            </summary>
            <param name="entry">Log entry.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.FindProvider(System.String)">
            <summary>
            Finds the provider with the specified ID.
            </summary>
            <param name="id">An ID of the provider.</param>
            <returns>Found provider or null (Nothing in Visual Basic) if the provider can not be found.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.Dispose">
            <summary>
            Causes all providers to flush currently buffered entries.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.GetInfo(Dynamicweb.Searching.Management.Logging.LogProvider)">
            <summary>
            Retrieves information about the single provider.
            </summary>
            <param name="p">An instance of the provider.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.GetProviders(System.String)">
            <summary>
            Gets the list of log providers for specified index.
            </summary>
            <param name="index">Index to return log providers for.</param>
            <returns>A list of log providers.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogHandler.InitializeProviders">
            <summary>
            Returns a set of all log providers distributed by target indexes.
            </summary>
            <returns>A set of all log providers distributed by target indexes.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogHandler.AdvancedLogging">
            <summary>
            Gets or sets the advanced logging mode.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogHandler.Providers">
            <summary>
            Gets a list of all available log providers.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogHandler.Index">
            <summary>
            Gets the relative path to the target index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexSearcher">
            <summary>
            Represents a loosely-typed index searcher.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexSearcher._cacheLock">
            <summary>
            Gets or sets the query results.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.TryGetFromCache``2(Dynamicweb.Searching.Management.IndexSearchParameters,Dynamicweb.Searching.Management.BulkIndexSearchParameters{``0})">
            <summary>
            Tries to get the query results from cache.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="T">Result type.</typeparam>
            <param name="parameters">Query parameters.</param>
            <param name="bulkParameters">Bulk parameters.</param>
            <returns>Cached query results or null (Nothing in Visual Basic) if results are not cached.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.AddOrUpdateCache``2(Dynamicweb.Searching.Management.IndexSearchParameters,Dynamicweb.Searching.Management.BulkIndexSearchParameters{``0},Dynamicweb.Searching.Queries.BulkQuerySearchResult{``0,``1})">
            <summary>
            Adds or updates item in the cache.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="T">Result type.</typeparam>
            <param name="parameters">Query parameters.</param>
            <param name="bulkParameters">Bulk parameters.</param>
            <param name="results">Query results.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.TryGetFromCache``1(Dynamicweb.Searching.Management.IndexSearchParameters)">
            <summary>
            Tries to get the query results from cache.
            </summary>
            <typeparam name="T">Result type.</typeparam>
            <param name="parameters">Query parameters.</param>
            <returns>Cached query results or null (Nothing in Visual Basic) if results are not cached.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.AddOrUpdateCache``1(Dynamicweb.Searching.Management.IndexSearchParameters,Dynamicweb.Searching.Queries.SearchResult{``0})">
            <summary>
            Adds or updates item in the cache.
            </summary>
            <typeparam name="T">Result type.</typeparam>
            <param name="parameters">Query parameters.</param>
            <param name="results">Query results.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.GetCacheKey(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Returns a cache key for a given search query.
            </summary>
            <param name="query">Search query.</param>
            <returns>Cache key.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.GetCacheKey(Dynamicweb.Searching.Queries.SearchQuery,System.Object)">
            <summary>
            Returns a cache key for a given search query.
            </summary>
            <param name="query">Search query.</param>
            <param name="customState">Custom state.</param>
            <returns>Cache key.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.WriteLog(Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode,System.String)">
            <summary>
            Logging.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearcher.QueryResults">
            <summary>
            Gets the query results cache.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexSearcher`1">
            <summary>
            Represents an index searcher.
            </summary>
            <typeparam name="T">A type of search index entries to retrieve.</typeparam>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.BulkSearch``1(Dynamicweb.Searching.Management.IndexSearchParameters,Dynamicweb.Searching.Management.BulkIndexSearchParameters{``0})">
            <summary>
            Searches for the index according to specified search parameters using a bulk search method.
            </summary>
            <typeparam name="TKey">Result set key type.</typeparam>
            <param name="parameters">Search parameters.</param>
            <param name="bulkParameters">Bulk search parameters.</param>
            <returns>A list of matched entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.BulkAny``1(Dynamicweb.Searching.Management.IndexSearchParameters,Dynamicweb.Searching.Management.BulkIndexSearchParameters{``0})">
            <summary>
            Searches for the index according to specified search parameters using a bulk search method.
            </summary>
            <typeparam name="TKey">Result set key type.</typeparam>
            <param name="parameters">Search parameters.</param>
            <param name="bulkParameters">Bulk search parameters.</param>
            <returns>A list of matched entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.Search(Dynamicweb.Searching.Management.IndexSearchParameters)">
            <summary>
            Searches for the index according to specified search parameters.
            </summary>
            <param name="parameters">Search parameters.</param>
            <returns>A list of matched entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.Any(Dynamicweb.Searching.Management.IndexSearchParameters)">
            <summary>
            Returns value indicating whether there are any results that match the given search criteria.
            </summary>
            <param name="parameters">Search parameters.</param>
            <returns>Value indicating whether there are any results that match the given search criteria.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.BulkSearchInternal``1(Dynamicweb.Searching.Management.IndexSearchParameters,Dynamicweb.Searching.Management.BulkIndexSearchParameters{``0},System.Boolean)">
            <summary>
            Searches for the index according to specified search parameters using a bulk search method.
            </summary>
            <typeparam name="TKey">Result set key type.</typeparam>
            <param name="parameters">Search parameters.</param>
            <param name="bulkParameters">Bulk search parameters.</param>
            <param name="poke">Value indicating whether only query if there are any results without retrieving results themselves.</param>
            <returns>A list of matched entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.SearchInternal(Dynamicweb.Searching.Management.IndexSearchParameters,System.Boolean)">
            <summary>
            Searches for the index according to specified search parameters.
            </summary>
            <param name="parameters">Search parameters.</param>
            <param name="poke">Value indicating whether only query if there are any results without retrieving results themselves.</param>
            <returns>A list of matched entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.GetQuery(System.String,System.String,System.String)">
            <summary>
            Retrieves query object by the specified query text.
            </summary>
            <param name="queryText">Query text.</param>
            <param name="defaultField">The name of the default field.</param>
            <param name="path">Relative path to the index.</param>
            <returns>Query object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.GetSort(System.Collections.Generic.IDictionary{System.String,Dynamicweb.Searching.Queries.Criterias.SortDirection})">
            <summary>
            Retrieves a sort object.
            </summary>
            <param name="orderBy">A list of "order by" expressions.</param>
            <returns>A sort object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearcher`1.GetIndexRecoveryMethod(Dynamicweb.Searching.IndexInfo)">
            <summary>
            Returns the index recovery method.
            </summary>
            <param name="info">Index information.</param>
            <returns>A recovery method or null (Nothing in Visual Basic) if the recovery cannot be performed.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexSearchParameters">
            <summary>
            Represents an index search parameters.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexSearchParameters.#ctor(System.String,Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="indexPhysicalPath">Physical path to the index.</param>
            <param name="query">Search query.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearchParameters.Path">
            <summary>
            Gets or sets the relative path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearchParameters.IndexPhysicalPath">
            <summary>
            Gets or sets the physical path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearchParameters.Query">
            <summary>
            Gets or sets the query.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearchParameters.MaintainIndexBackup">
            <summary>
            Gets or sets value indicating whether search can be performed in a backup version of the index if the "live" version is not available.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearchParameters.QueryText">
            <summary>
            Gets or sets query text.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexSearchParameters.Valid">
            <summary>
            Gets value indicating whether parameters are valid.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexUpdateParameters">
            <summary>
            Represents index update parameters.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateParameters.#ctor(Dynamicweb.Searching.IndexInfo,System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="info">Index information.</param>
            <param name="data">The data to be updated.</param>
            <param name="clearIndex">Indicates whether to clear an index before updating it.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateParameters.#ctor(System.String,System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="indexPhysicalPath">The physical path to the index.</param>
            <param name="data">The data to be updated.</param>
            <param name="clearIndex">Indicates whether to clear an index before updating it.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateParameters.IndexPhysicalPath">
            <summary>
            Gets or sets the physical path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateParameters.Data">
            <summary>
            Gets or sets the data to be updated.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateParameters.ClearIndex">
            <summary>
            Gets or sets value indicating whether to clear an index before updating it.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateParameters.Valid">
            <summary>
            Gets value indicating whether parameters are valid.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateParameters.IgnoreLockedState">
            <summary>
            Gets or sets value indicating whether to ignore the "Locked" state of the target index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateParameters.Info">
            <summary>
            Gets the information about the index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexUpdater">
            <summary>
            Provides methods and properties for updating index.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexUpdater._writers">
            <summary>
            Gets an instance of the index writer used to perform index modifications.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.Dispose">
            <summary>
            Disposes managed resources.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.Commit">
            <summary>
            Commits index modifications.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.Update(Dynamicweb.Searching.Management.IndexUpdateParameters)">
            <summary>
            Updates an index.
            </summary>
            <param name="parameters">Update parameters.</param>
            <returns>A list of unique ID of the update entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.GetIndexWriter(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves an index modifier for the specified index.
            </summary>
            <param name="physicalPath">Physical path to the index.</param>
            <param name="path">Relative path to the index.</param>
            <param name="clearOnError">Indicates whether to clear index and create the new one if access to existing index can't be retrieved.</param>
            <returns>Index modifier for the specified index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.UnlockIndex(System.String)">
            <summary>
            Unlocks the index.
            </summary>
            <param name="physicalPath">Index physical path.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.UnlockIndex(Dynamicweb.Searching.Internal.IndexDirectoryEx)">
            <summary>
            Unlocks index directory.
            </summary>
            <param name="dir">Directory to unlock.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.GetBlocks(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem})">
            <summary>
            Splits the specified collection into fixed size blocks.
            </summary>
            <param name="items">Items to process.</param>
            <returns>A list of blocks.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.UpdateBlock(System.Collections.Generic.List{Dynamicweb.Searching.IndexerQueueItem},Dynamicweb.Searching.Internal.IndexWriterEx,System.Collections.Generic.List{System.String})">
            <summary>
            Updates single block.
            </summary>
            <param name="block">Block to update.</param>
            <param name="writer">Index writer used for updating the block.</param>
            <param name="result">A list to write ID of items that has been updated.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.GetAnalyzer(System.String)">
            <summary>
            Retrieves an index analyzer used for indexing.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>An index analyzer used for indexing.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.GetSearcherByPhysicalPath(System.String)">
            <summary>
            Retrieves a shared index searcher for a given index.
            </summary>
            <param name="physicalPath">Physical path to the index.</param>
            <returns>Index searcher for a given index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.GetStopWords(System.String)">
            <summary>
            Returns a list of current stop words.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>A list of current stop words.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.GetAnalysisOptions(System.String)">
            <summary>
            Returns analysis options for a given index.
            </summary>
            <param name="path">Index path.</param>
            <returns>Analysis options.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdater.CreateAnalyzer(System.String)">
            <summary>
            Creates new analyzers for a given index.
            </summary>
            <param name="path">Relative index path.</param>
            <returns>Analyzer.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexUpdateService">
            <summary>
            Provides methods for updating an index asynchronously.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexUpdateService.SyncLock">
            <summary>
            Used to synchronize access to the object from multiple threads.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexUpdateService.TickFrequency">
            <summary>
            Gets the frequency of the service.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexUpdateService.ActiveTasks">
            <summary>
            Gets or sets a list of all active tasks.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexUpdateService.TaskIDCounter">
            <summary>
            Gets or sets an ID of the next task.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.IndexUpdateService.WaitHandle">
            <summary>
            Gets or sets the wait handle.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.Start">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.Stop">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.Dispose">
            <summary>
            Stops the service and disposes any resources used by the service.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.Run">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.StartScheduledTasks">
            <summary>
            Starts all scheduled tasks.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.CreateTask(System.String,System.Boolean)">
            <summary>
            Creates new update task.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.CreateTask(System.String,System.Boolean,System.Int32)">
            <summary>
            Creates new update task.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
            <param name="delay">The number of milliseconds to wait before executing the task.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.ContainsActiveTask(System.Int32)">
            <summary>
            Determines whether service contains the task with a given ID.
            </summary>
            <param name="id">An ID of the task.</param>
            <returns>Value indicating whether service contains the task with a given ID.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.ContainsActiveTask(System.String)">
            <summary>
            Determines whether service contains the task with a given path.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>Value indicating whether service contains the task with a given path.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.GetTaskID(System.String)">
            <summary>
            Retrieves an ID of the task specified by the relative path to the index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>An ID of the task or -1 if no such task was found.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.RemoveTasks(System.Func{Dynamicweb.Searching.Management.IndexUpdateTask,System.Boolean})">
            <summary>
            Removes all tasks that satisfy the criterion.
            </summary>
            <param name="predicate">Criterion.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.RemoveTask(System.Int32)">
            <summary>
            Removes task specified by ID.
            </summary>
            <param name="id">Task ID.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.RemoveTasks(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Removes a range of tasks specified by a list of their IDs.
            </summary>
            <param name="ids">Task IDs.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.RemoveCompletedTasks">
            <summary>
            Removes completed tasks.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateService.StopAndRemoveTask(System.Int32)">
            <summary>
            Stops and removes the given task.
            </summary>
            <param name="id">Task Id.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateService.Current">
            <summary>
            Gets the current update service instance.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateService.IsRunning">
            <summary>
            Gets value indicating whether service is running.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexUpdateTaskParameters">
            <summary>
            Represents an index update task parameters.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="clearIndex">Indicates whether to clear an index before updating it.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.RestoreContext">
            <summary>
            Restores the HTTP context.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.PersistContext">
            <summary>
            Saves the current HTTP context.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.Path">
            <summary>
            Gets the relative path to the index. 
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.PathPhysical">
            <summary>
            Gets the physical path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.ClearIndex">
            <summary>
            Gets or sets value indicating whether to clear an index before updating it.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.Context">
            <summary>
            Gets or sets the current HTTP context.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.Items">
            <summary>
            Gets the request items collection.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTaskParameters.Restored">
            <summary>
            Gets or sets value indicating whether state has been restored.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.IndexUpdateTask">
            <summary>
            Represents a index update service task.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateTask.#ctor(System.Int32,Dynamicweb.Searching.Management.IndexUpdateTaskParameters)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="id">Task ID.</param>
            <param name="parameters">Task parameters.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.IndexUpdateTask.Process">
            <summary>
            Update an index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTask.ID">
            <summary>
            Gets the unique identifier of this task.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTask.Delay">
            <summary>
            Gets the number of milliseconds to wait before executing the task.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTask.HostingThread">
            <summary>
            Gets the hosting thread for this task.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTask.Parameters">
            <summary>
            Gets task parameters.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTask.CanExecute">
            <summary>
            Gets value indicating whether task can execute.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.IndexUpdateTask.IsPendingAbortion">
            <summary>
            Gets or sets value indicating whether abortion operation is pending for this task.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Indexer">
            <summary>
            Represents a search engine indexer.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.QueueEntry(Dynamicweb.Searching.IndexerQueueItem)">
            <summary>
            Puts specified entry into the queue.
            </summary>
            <param name="item">Entry to put into the queue.</param>
            <returns>Value indicating whether entry has been put into the queue.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.QueueEntry(Dynamicweb.Searching.IndexEntry,Dynamicweb.Searching.IndexerQueueItemState,System.Boolean)">
            <summary>
            Puts specified entry into the queue.
            </summary>
            <param name="entry">Entry to put into the queue.</param>
            <param name="state">Entry state.</param>
            <param name="isPartiallyPersisted">Indicates whether index entry should be restored from the queued item before performing an update of the index.</param>
            <returns>Value indicating whether entry has been put into the queue.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.ResolveDataItems(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexEntry})">
            <summary>
            Retrieves data items corresponding to specified index entries.
            </summary>
            <param name="entries">Index entires to resolve data items against.</param>
            <returns>Resolved data items.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.TryExecuteAutomaticUpdate">
            <summary>
            Tries to run automatic updates.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.SaveState">
            <summary>
            Persists indexer state either on the disk or in the database.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.LoadState">
            <summary>
            Loads indexer state either from the disk or from the database.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.PerformUpdate(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},Dynamicweb.Searching.IndexerQueueContentType,Dynamicweb.Searching.Management.IndexUpdateParameters)">
            <summary>
            Performs update process.
            </summary>
            <param name="data">Data to be updated/deleted.</param>
            <param name="expectedContentType">Expected content type of the queued data.</param>
            <param name="parameters">Index update parameters.</param>
            <returns>Modifications result.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.FinalizeUpdate">
            <summary>
            Performs finalization stage of the index update process.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.Cleanup">
            <summary>
            Performs a cleanup procedure.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.PerformIndexModifications(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},Dynamicweb.Searching.Management.IndexUpdateParameters)">
            <summary>
            Modifies the index by adding new entries.
            </summary>
            <param name="fromEntries">Queued data.</param>
            <param name="parameters">Index update parameters.</param>
            <returns>Modifications result.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.PerformIndexModifications(Dynamicweb.Searching.Management.IndexUpdateParameters,System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},Dynamicweb.Searching.IndexModificationResult)">
            <summary>
            Modifies an index and adds modification results to the specified result object.
            </summary>
            <param name="parameters">Index update parameters.</param>
            <param name="data">Data that needs to be updated.</param>
            <param name="addToResult">Result object that needs to be filled with the modifications result.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.PerformIndexModifications(Dynamicweb.Searching.Management.IndexUpdateParameters)">
            <summary>
            Modifies an index.
            </summary>
            <param name="parameters">Index update parameters.</param>
            <returns>A list of affected IDs.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.NextPage(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},System.Int32)">
            <summary>
            Retrieves a next page to be indexed.
            </summary>
            <param name="items">Total list of queued items.</param>
            <param name="offset">Zero-based index representing a starging position.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.Index(Dynamicweb.Searching.IndexerDataRequest)">
            <summary>
            Creates new index entries.
            </summary>
            <param name="request">Provides information about what data should be retrieved.</param>
            <returns>New entries that needs to be put into the index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.GetAnalysisOptions">
            <summary>
            Returns a custom index analysis settings that are used for both indexing and querying.
            </summary>
            <returns>A custom index analysis settings that are used for both indexing and querying.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.OnBeforeIndex(System.EventArgs)">
            <summary>
            Raises "BeforeIndex" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.OnAfterIndex(System.EventArgs)">
            <summary>
            Raises "AfterIndex" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.OnIndexerSave(System.EventArgs)">
            <summary>
            Raises "IndexerSave" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Indexer.OnIndexerLoad(System.EventArgs)">
            <summary>
            Raises "IndexerLoad" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="E:Dynamicweb.Searching.Indexer.BeforeIndex">
            <summary>
            Occurs before the indexing process has started.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.Indexer.AfterIndex">
            <summary>
            Occurs after the indexing process has completed.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.Indexer.IndexerSave">
            <summary>
            Occurs after the indexer state has been saved.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.Indexer.IndexerLoad">
            <summary>
            Occurs after the indexer state has been loaded.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Indexer.Info">
            <summary>
            Gets the information about the current indexer.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Indexer.Storage">
            <summary>
            Gets the information about the associated index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Indexer.DataRetrievalOptions">
            <summary>
            Gets the data retrieval options for this indexer.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Indexer.Queue">
            <summary>
            Gets the indexer queue fro the current indexer.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexEntrySystemField">
            <summary>
            Represents a system field of the index entry.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.ID">
            <summary>
            The local identifier of the entry.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.TypeID">
            <summary>
            The entry type identifier.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.UniqueID">
            <summary>
            The unique (global) identifier of the entry.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.IndexerID">
            <summary>
            The identifier of the entry's providing indexer.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.Name">
            <summary>
            The name of the entry.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.Description">
            <summary>
            The description of the entry.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexEntrySystemField.Summary">
            <summary>
            Entry's summary.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.GeneralIndexEntry">
            <summary>
            Represents a general index entry.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.GeneralIndexEntry.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexInfo">
            <summary>
            Provides information about the index.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexInfo.SystemRootPath">
            <summary>
            Gets the virtual path to the root folder where all indexes resides.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexInfo.SyncLock">
            <summary>
            Used to synchronize access to this object from multiple threads.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Relative (or physical) path to the index.</param>
            <param name="pathIsPhysical">Value indicating whether physical path to the index has been specified.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.#ctor(Dynamicweb.Searching.IndexInfo)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="copyFrom">Object to copy data from.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.Initialize(System.String,System.Boolean)">
            <summary>
            Initializes the path information.
            </summary>
            <param name="path">Relative (or physical) path to the index.</param>
            <param name="pathIsPhysical">Value indicating whether physical path to the index has been specified.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.CopyTo(Dynamicweb.Searching.IndexInfo)">
            <summary>
            Copies the state of the current object into the given one.
            </summary>
            <param name="target">Object to copy state into.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target">target</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.Lock">
            <summary>
            Locks the index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.UnLock">
            <summary>
            Unlocks the index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.CreateBackup">
            <summary>
            Creates the backup for the index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.SwapDirectories">
            <summary>
            Swaps directory pointers for "live" and "backup" versions of the index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.DeleteBackup">
            <summary>
            Deletes the backup of the index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.RestoreFromBackup(System.Boolean)">
            <summary>
            Restores index from the backup (if exists).
            </summary>
            <param name="deleteBackup">Indicates whether to delete backup after completion.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.DeleteIndex">
            <summary>
            Deletes an index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.ResolveRelativePath(System.String)">
            <summary>
            Resolves relative index path by a given full physical path.
            </summary>
            <param name="physicalPath">Index physical path.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.GetTotalEntries">
            <summary>
            Gets the total number of entries in the current index.
            </summary>
            <returns>The total number of entries in the current index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexLastUpdateTime">
            <summary>
            Gets the date and time of the last index modifications.
            </summary>
            <returns>The date and time of the last index modifications.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexSize">
            <summary>
            Gets the size (in bytes) of the index.
            </summary>
            <returns>The size (in bytes) of the index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexIsSwitched">
            <summary>
            Determines whether index is switched.
            </summary>
            <returns>Value indicating whether index is locked.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.SaveSwitchState">
            <summary>
            Saves the "Switched" state of the index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexIsLocked">
            <summary>
            Determines whether index is locked.
            </summary>
            <returns>Value indicating whether index is locked.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.SetIsLocked(System.Boolean)">
            <summary>
            Changes the "locked" state of the index.
            </summary>
            <param name="isLocked">Value indicating whether index is locked.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexIsLockedNatively">
            <summary>
            Determines whether index is locked natively by Lucene.Net.
            </summary>
            <returns>Value indicating whether index is locked natively by Lucene.Net.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexIsBeingDeleted">
            <summary>
            Determines whether index is being deleted.
            </summary>
            <returns>Value indicating whether index is being deleted.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexExists">
            <summary>
            Determines whether current index exists.
            </summary>
            <returns>Value indicating whether current index exists.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.IndexHasBackup">
            <summary>
            Determines whether index has a backup.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.CopyFolder(System.String,System.String)">
            <summary>
            Copies the folder from the source into the destination.
            </summary>
            <param name="source">Source folder path.</param>
            <param name="destination">Destination folder path.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.GetInfo(System.String)">
            <summary>
            Retrieves index information based on the ralative path to the index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>Index information for the specified index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.GetInfo(System.String,System.Boolean)">
            <summary>
            Retrieves index information based on the ralative path to the index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="cache">Indicates whether to cache results of the method for the current HTTP request.</param>
            <returns>Index information for the specified index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.GetInfoByPhysicalLocation(System.String)">
            <summary>
            Retrieves index information based on the physical location of the index.
            </summary>
            <param name="physicalPath">Physical location of the index.</param>
            <returns>Index information for the specified index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.GetInfoByPhysicalLocation(System.String,System.Boolean)">
            <summary>
            Retrieves index information based on the physical location of the index.
            </summary>
            <param name="physicalPath">Physical location of the index.</param>
            <param name="cache">Indicates whether to cache results of the method for the current HTTP request.</param>
            <returns>Index information for the specified index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexInfo.DeleteIndex(System.String)">
            <summary>
            Deletes an index.
            </summary>
            <param name="path">Relative path to the index.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.Path">
            <summary>
            Gets the relative path to the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.RootPath">
            <summary>
            Gets the virtual path to the root folder of the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.SpellingPath">
            <summary>
            Gets the virtual path to the directory containing spelling corrections data.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.BackupPath">
            <summary>
            Gets the virtual path to the backup of this index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.SwitcherPath">
            <summary>
            Gets or sets the virtual path to the switcher file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.LockerPath">
            <summary>
            Gets the virtual path to the index locker file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.QueuePath">
            <summary>
            Gets the virtual path to the index queue file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.RootPhysicalPath">
            <summary>
            Gets or sets the physical path to the root folder of the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.SpellingPhysicalPath">
            <summary>
            Gets the physical path to the directory containing spelling corrections data.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.BackupPhysicalPath">
            <summary>
            Gets or sets the physical path to the index backup.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.QueuePhysicalPath">
            <summary>
            Gets or sets the physical path to the index queue file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.SwitcherPhysicalPath">
            <summary>
            Gets or sets the physical path to the switcher file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.LockerPhysicalPath">
            <summary>
            Gets or sets the physical path to the locker file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.IsSwapped">
            <summary>
            Gets value indicating whether directories on this instance were swapped.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.Exists">
            <summary>
            Gets value indicating whether index exists.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.IsSwitched">
            <summary>
            Gets value indicating whether index is switched.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.IsLocked">
            <summary>
            Gets value indicating whether index is locked.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.IsLockedNatively">
            <summary>
            Gets value indicating whether index is locked by native mechanisms of the underlying search engine.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.IsBeingDeleted">
            <summary>
            Gets value indicating whether index is being deleted (the a process of deleting the index is currently executing).
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.HasBackup">
            <summary>
            Gets value indicating whether index has a backup.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.LastUpdateTime">
            <summary>
            Gets the date and time of the last index modifications.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.Size">
            <summary>
            Gets the size of the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.EntriesCount">
            <summary>
            Gets the total number of entries in the index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.CachedInfos">
            <summary>
            Gets the cached infos.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.Cache">
            <summary>
            Gets or sets value indicating whether to cache properties/methods results for the current HTTP request.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexInfo.MethodResultCache">
            <summary>
            Gets the method result cache.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexManager">
            <summary>
            Represents an index manager.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexManager.SyncLock">
            <summary>
            Gets the lock object that is used to synchronize access to the index manager from multiple threads.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexManager.Status">
            <summary>
            Status Messages for indexing
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateIndex(Dynamicweb.Searching.Indexer,System.Boolean)">
            <summary>
            Updates an index.
            </summary>
            <param name="i">Object which represents a data to be put inside the index.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateIndex(System.String,System.Boolean)">
            <summary>
            Updates an index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.BulkQueryIndex``2(System.String,Dynamicweb.Searching.Queries.SearchQuery,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Performs a bulk search on the specified index.
            </summary>
            <typeparam name="TKey">Result set key type.</typeparam>
            <typeparam name="TResult">Result type.</typeparam>
            <param name="path">Relative path to the index.</param>
            <param name="query">Query object.</param>
            <param name="keys">The keys for groupping result sets.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.QueryIndex``1(System.String,Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Performs a search on the specified index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="query">Query object.</param>
            <returns>Search results.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.CorrectSpelling(System.String,System.String)">
            <summary>
            Returns a list of possible spelling corrections for a given word.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="word">Word to correct.</param>
            <returns>A list of possible spelling corrections for a given word.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.CorrectSpelling(System.String,System.String,System.Int32)">
            <summary>
            Returns a list of possible spelling corrections for a given word.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="word">Word to correct.</param>
            <param name="maxCorrections">Maximum number of corrections to return.</param>
            <returns>A list of possible spelling corrections for a given word.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.SuggestTerms(System.String,System.String[])">
            <summary>
            Performs a suggestion for search terms/phrases based on original terms.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="terms">A list of original terms that the suggestions should be based on.</param>
            <returns>A list of suggested terms/phrases or an empty list if no suggestions can be made.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.SuggestTerms(System.String,System.String[],Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Performs a suggestion for search terms/phrases based on original terms.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="terms">A list of original terms that the suggestions should be based on.</param>
            <param name="filter">Option search query element used to filter initial results coming from the search engine index.</param>
            <returns>A list of suggested terms/phrases or an empty list if no suggestions can be made.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.SuggestTerms(System.String,System.String[],System.String,Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Performs a suggestion for search terms/phrases based on original terms.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="terms">A list of original terms that the suggestions should be based on.</param>
            <param name="field">Name of the index entry field so search for suggestions in.</param>
            <param name="filter">Option search query element used to filter initial results coming from the search engine index.</param>
            <returns>A list of suggested terms/phrases or an empty list if no suggestions can be made.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.HasResults(System.String,Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Determines whether there are any search results for the corresponding search query.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="element">Search query.</param>
            <returns>Value indicating whether there are any search results for the corresponding search query.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.BulkHasResults``1(System.String,Dynamicweb.Searching.Queries.SearchQuery,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether there are any search results for the corresponding search query.
            </summary>
            <typeparam name="TKey">Result set key type.</typeparam>
            <param name="path">Relative path to the index.</param>
            <param name="query">Query object.</param>
            <param name="keys">The keys for groupping result sets.</param>
            <returns>A list that contains the keys for which results were found.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetTerms(System.String,System.String)">
            <summary>
            Retrieves a list of unique terms for the given field.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="field">Name of the field.</param>
            <returns>A list of all unique field values.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.SuggestTerms(System.String,System.String[],System.String,System.Int32,Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Performs a suggestion for search terms/phrases based on original terms.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="terms">A list of original terms that the suggestions should be based on.</param>
            <param name="field">Name of the index entry field so search for suggestions in.</param>
            <param name="maxSuggestions">Maximum number of suggested terms/phrases. The maximum allowed value is 20.</param>
            <param name="filter">Option search query element used to filter initial results coming from the search engine index.</param>
            <returns>A list of suggested terms/phrases or an empty list if no suggestions can be made.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.ResolveDataItems(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexEntry})">
            <summary>
            Creates data items from the list of index entries.
            </summary>
            <param name="entries">Index entries to process.</param>
            <returns>Created data items.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexer(System.String)">
            <summary>
            Retrieves indexer by its ID.
            </summary>
            <param name="id">Indexer ID.</param>
            <returns>Retrieved indexer or null (Nothing in Visual Basic) if specified indexer can not be retrieved.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexerInfo(System.String)">
            <summary>
            Retrieves an information about specified indexer.
            </summary>
            <param name="id">Indexer ID.</param>
            <returns>Information about specified indexer or null (Nothing in Visual Basic) if information can not be retrieved.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexerInfo(System.Type)">
            <summary>
            Retrieves an information about specified indexer.
            </summary>
            <param name="indexerType">Indexer type.</param>
            <returns>Information about specified indexer or null (Nothing in Visual Basic) if information can not be retrieved.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexers(System.String)">
            <summary>
            Retrieves a list of indexers by their index path.
            </summary>
            <param name="path">Index path.</param>
            <returns>A list of indexers or empty list if nothing has been found.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexers">
            <summary>
            Retrieves a list of all indexers.
            </summary>
            <returns>A list of all indexers.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetSchema(System.String)">
            <summary>
            Retrieves the schema for specified index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>Index schema or null (Nothing in Visual Basic) if the schema can not be retrieved.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetSettings(System.String)">
            <summary>
            Loads configuration settings for a given index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <returns>A collection of configuration settings for a given index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.Dispose">
            <summary>
            Frees any used resources and persists any sensitive information on the disk.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.Initialize">
            <summary>
            Initializes all indexers.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexerQueue(System.String)">
            <summary>
            Retrieves an indexer queue for the specified index path.
            </summary>
            <param name="path">Relative index path.</param>
            <returns>New (or existing) indexer queue for the specified index path.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.BulkQueryIndexInternal``2(System.String,Dynamicweb.Searching.Queries.SearchQuery,System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Performs a bulk search on the specified index.
            </summary>
            <typeparam name="TKey">Result set key type.</typeparam>
            <typeparam name="TResult">Result type.</typeparam>
            <param name="path">Relative path to the index.</param>
            <param name="query">Query object.</param>
            <param name="keys">The keys for groupping result sets.</param>
            <param name="poke">Value indicating whether only query if there are any results without retrieving results themselves.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.QueryIndexInternal``1(System.String,Dynamicweb.Searching.Queries.SearchQuery,System.Boolean)">
            <summary>
            Performs a search on the specified index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="query">Query object.</param>
            <param name="poke">Value indicating whether only query if there are any results without retrieving results themselves.</param>
            <returns>Search results.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.CheckSuggestedTerms(System.String,System.String,System.String[],System.Int32,System.Int32,Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Checks whether specified terms can be used for suggesting.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="field">Target field name.</param>
            <param name="terms">Original terms.</param>
            <param name="maxResults">Maximum results to analyze.</param>
            <param name="maxResultsFilter">The number of results to return.</param>
            <param name="filter">Optional filter used to limit the result set.</param>
            <returns>Either original or new terms.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateIndexInternal(Dynamicweb.Searching.Indexer,System.Boolean,System.Boolean)">
            <summary>
            Updates an index.
            </summary>
            <param name="i">Indexer to take information from.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
            <param name="updateSpell">Indicates whether to update spell dictionary containing data for spelling corrections.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateIndexInternal(Dynamicweb.Searching.Indexer,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Updates an index.
            </summary>
            <param name="i">Object which represents a data to be put inside the index.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
            <param name="flags">Additional flags.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateIndexInternal(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Updates an index.
            </summary>
            <param name="path">Relative path to the index.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
            <param name="flags">Additional flags.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateIndexInternal(Dynamicweb.Searching.Indexer,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Updates an index.
            </summary>
            <param name="i">Indexer to take information from.</param>
            <param name="isFullUpdate">Indicates whether full update should be performed.</param>
            <param name="updateSpell">Indicates whether to update spell dictionary containing data for spelling corrections.</param>
            <param name="flags">Additional flags.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.PerformFileSystemTask(System.Action,System.Int32,System.Int32)">
            <summary>
            Performs an exception-safe file system task.
            </summary>
            <param name="task">Task to perform.</param>
            <param name="attempts">Total number of attempts to make in case of failure.</param>
            <param name="delay">Delay (in milliseconds) between attempts.</param>
            <returns>Value indicating whether task was performed successfully.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.PerformFileSystemTask(System.Action,System.Int32,System.Int32,System.Int32)">
            <summary>
            Performs an exception-safe file system task.
            </summary>
            <param name="task">Task to perform.</param>
            <param name="attempts">Total number of attempts to make in case of failure.</param>
            <param name="delay">Delay (in milliseconds) between attempts.</param>
            <param name="current">Current attempt.</param>
            <returns>Value indicating whether task was performed successfully.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.UpdateSpellDictionary(Dynamicweb.Searching.IndexInfo,Dynamicweb.Searching.Management.Logging.LogHandler)">
            <summary>
            Updates spell dictionary containing data for spell suggestions.
            </summary>
            <param name="info">Index info.</param>
            <param name="log">Log handler.</param>
            <returns>Value indicating whether spell dictionary was successfully updated.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GroupItemsByNature(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem},Dynamicweb.Searching.Indexer)">
            <summary>
            Groups all queued items by their nature (normal or extendible).
            </summary>
            <param name="items">Items to group.</param>
            <param name="i">Owning indexer.</param>
            <returns>Groupped items.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GroupEntriesByIndexer(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexEntry})">
            <summary>
            Groups list of entries by their indexer ID.
            </summary>
            <param name="entries">List of entries to process.</param>
            <returns>Groupped entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetAllIndexers">
            <summary>
            Retrieves all existing indexers mapped to their IDs.
            </summary>
            <returns>Indexers mapped to their IDs.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.GetIndexerIdentity(System.Type)">
            <summary>
            Retrieves an indexer identity for the specified indexer type.
            </summary>
            <param name="indexerType">Indexer type.</param>
            <returns>Indexer identity information or null (Nothing in Visual Basic) if the identity can not be retrieved.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.IndexManager.Current">
            <summary>
            Gets the current instance of the index manager.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexManager.TermsCheckResult">
            <summary>
            Represents a result of the "Check terms" operation.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexManager.TermsCheckResult.#ctor(System.String[],System.String[])">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="terms">The list of checked terms.</param>
            <param name="results">The list of search results.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexManager.TermsCheckResult.Terms">
            <summary>
            Gets or sets the list of checked terms.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexManager.TermsCheckResult.Results">
            <summary>
            Gets or sets the list of search results.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueueContentType">
            <summary>
            Represents a content type of the queued data.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueContentType.Undefined">
            <summary>
            Content type can not be determined.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueContentType.Normal">
            <summary>
            Normal queue items.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueContentType.Extendible">
            <summary>
            Extendible queue items.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueueContentType.Mixed">
            <summary>
            Mixed content.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueueEventArgs">
            <summary>
            Provides information about the state of the queue.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueueEventArgs.#ctor(Dynamicweb.Searching.IndexerQueueItem)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="item">Target queue item.</param>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueueEventArgs.Item">
            <summary>
            Gets the target queue item.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueue">
            <summary>
            Represents an indexer queue.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.IndexerQueue.SyncLock">
            <summary>
            Gets the lock object that is used to synchronize access to the queue from multiple threads.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">Physical path to the queue file.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.Queue(Dynamicweb.Searching.IndexerQueueItem,System.String)">
            <summary>
            Puts new entry into the queue.
            </summary>
            <param name="item">Item to put into the queue.</param>
            <param name="indexerID">An ID of the indexer.</param>
            <returns>Value indicating whether entry has been put into the queue.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.Dequeue">
            <summary>
            Pops last entry from the queue.
            </summary>
            <returns>Extracted entry, or null (Nothing in Visual Basic) if the queue is empty.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.ToString">
            <summary>
            Returns a string representation of the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.Save">
            <summary>
            Persists queue on the disk.
            </summary>
            <returns>Value indicating whether queue has been persisted on the disk.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.Save(System.Boolean)">
            <summary>
            Persists queue on the disk.
            </summary>
            <param name="mergeWithOffline">Indicates whether offline items should be merged with online items.</param>
            <returns>Value indicating whether queue has been persisted on the disk.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.Load">
            <summary>
            Loads the queue from the disk.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.Clear">
            <summary>
            Cleares the queue and deletes the queue file (if exists).
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.GetItem(System.Int32)">
            <summary>
            Returns queue item at the given index.
            </summary>
            <param name="index">Zero-based index of an item.</param>
            <returns>Item at the given index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.TryRemove(System.Int32)">
            <summary>
            Removes item with specified index.
            </summary>
            <param name="index">0-based item index.</param>
            <returns>Value indicating whether item has been removed.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.IndexOf(System.String)">
            <summary>
            Locates an index of the specified item.
            </summary>
            <param name="uniqueID">Item entry unique ID.</param>
            <returns>0-based index of the item (or -1 if specified item can not be found).</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.GetQueueSize">
            <summary>
            Returns the size of the queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.GetQueueResidentSize">
            <summary>
            Gets the resident memory size of the queue.
            </summary>
            <returns>The resident memory size of the queue.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.GetQueueFileExists">
            <summary>
            Determines whether there is a queue file located on a disk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.SaveToDisk(System.String)">
            <summary>
            Persists the given XML string on the disk.
            </summary>
            <param name="xml">XML string to persist.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.ConvertToXml(System.Boolean)">
            <summary>
            Converts the queue into the XML document.
            </summary>
            <param name="mergeWithOffline">Indicates whether to merge online queue items with offline data.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.LoadFromDisk">
            <summary>
            Loads the queue from the disk.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.OnItemAdd(Dynamicweb.Searching.IndexerQueueEventArgs)">
            <summary>
            Raises "ItemAdd" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.OnItemRemove(Dynamicweb.Searching.IndexerQueueEventArgs)">
            <summary>
            Raises "ItemRemove" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.OnQueueSave(System.EventArgs)">
            <summary>
            Raises "QueueSave" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.OnQueueLoad(System.EventArgs)">
            <summary>
            Raises "QueueLoad" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.OnQueueClear(System.EventArgs)">
            <summary>
            Raises "QueueClear" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the queue.
            </summary>
            <returns>An enumerator that iterates through the queue.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the queue.
            </summary>
            <returns>An enumerator that iterates through the queue.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.DetermineQueueContentType(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.IndexerQueueItem})">
            <summary>
            Determines the content type of the queue.
            </summary>
            <param name="queue">Queued data.</param>
            <returns>The content type of the queue.</returns>
        </member>
        <member name="E:Dynamicweb.Searching.IndexerQueue.ItemAdd">
            <summary>
            Occurs after the item has been added into the queue.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.IndexerQueue.ItemRemove">
            <summary>
            Occurs after the item has been removed from the queue.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.IndexerQueue.QueueSave">
            <summary>
            Occurs after the queue has been saved into the disk.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.IndexerQueue.QueueLoad">
            <summary>
            Occurs after the queue has been loaded from the disk.
            </summary>
        </member>
        <member name="E:Dynamicweb.Searching.IndexerQueue.QueueClear">
            <summary>
            Occurs after the queue has been cleared.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.Path">
            <summary>
            Gets the virtual path to the queue file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.PhysicalPath">
            <summary>
            Gets the physical path to the queue file.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.ContentType">
            <summary>
            Gets the content type of the queue.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.QueueFileExists">
            <summary>
            Gets value indicating whether there is a queue file on a disk.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.Count">
            <summary>
            Gets the number of entries currently placed into the queue.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.Size">
            <summary>
            Gets the total size (in bytes) of the queue.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.ResidentSize">
            <summary>
            Gets the size (in bytes) of the resident part of the queue (the queue which resides in a memory).
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.Data">
            <summary>
            Gets the queue data.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.Entries">
            <summary>
            Gets the entries list.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IndexerQueue.QueueData">
            <summary>
            Represents a queue data. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.#ctor(Dynamicweb.Searching.IndexerQueue.QueueData)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="copyFrom">Object to copy state from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="copyFrom">copyFrom</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.CopyTo(Dynamicweb.Searching.IndexerQueue.QueueData)">
            <summary>
            Copies state of the current object into the given one.
            </summary>
            <param name="target">Object to copy state into.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="target">target</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.FindIndexesByUniqueID(System.String)">
            <summary>
            Finds all items with the given unique ID and returns a list of zero-based indexes of each item.
            </summary>
            <param name="uniqueID">Unique ID.</param>
            <returns>A list of zero-based indexes of each item.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.FindIndexesBySelectorField(System.String)">
            <summary>
            Finds all items with the given selector field and returns a list of zero-based indexes of each item.
            </summary>
            <param name="selectorField">Selector field.</param>
            <returns>A list of zero-based indexes of each item.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.GetItem(System.Int32)">
            <summary>
            Returns queue item at the given index.
            </summary>
            <param name="index">Zero-based index of an item.</param>
            <returns>Item at the given index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.AddItem(Dynamicweb.Searching.IndexerQueueItem)">
            <summary>
            Adds the given item to the end of the collection.
            </summary>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.ReplaceItem(System.Int32,Dynamicweb.Searching.IndexerQueueItem)">
            <summary>
            Replaces the item at the given index.
            </summary>
            <param name="index">Zero-based index.</param>
            <param name="item">Item to replace.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.RemoveItem(Dynamicweb.Searching.IndexerQueueItem)">
            <summary>
            Removes the given item from the queue.
            </summary>
            <param name="item">Item to remove.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.RemoveLastItem">
            <summary>
            Removes last item and returns is.
            </summary>
            <returns>Removed item.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.RemoveItem(System.Int32)">
            <summary>
            Removes the given item from the queue.
            </summary>
            <param name="index">Zero-based index of an item.</param>
        </member>
        <member name="M:Dynamicweb.Searching.IndexerQueue.QueueData.ClearItems">
            <summary>
            Removes all items from the queue.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.QueueData.Entries">
            <summary>
            Gets the entries.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.QueueData.EntriesIndex">
            <summary>
            Gets the entries index.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.IndexerQueue.QueueData.EntriesBySelectorIndex">
            <summary>
            Gets the entries index by selector.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogEntryMessageType">
            <summary>
            Represents a log entry message type.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageType.Information">
            <summary>
            Information message.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageType.Warning">
            <summary>
            Warning message.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageType.Error">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode">
            <summary>
            Represents a known message code.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.NotSpecified">
            <summary>
            No standard message code can be applied for this message.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.UpdateStarted">
            <summary>
            Indicates that index updating process has been started.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.QueryStarted">
            <summary>
            Indicates that index querying process has been started.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.ResolveEntriesStarted">
            <summary>
            Indicates that data items resolving process has been started.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.DisposeInitiated">
            <summary>
            Indicates that dispose process has been initiated.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.InitializeInitiated">
            <summary>
            Indicates that initialize process has been initiated.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.UpdateCompleted">
            <summary>
            Indicates that index updating process has been successfully completed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.QueryCompleted">
            <summary>
            Indicates that index querying process has been successfully completed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.ResolveEntriesCompleted">
            <summary>
            Indicates that data items resolving process has been completed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.DisposeCompleted">
            <summary>
            Indicates that dispose process has been completed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.InitializeCompleted">
            <summary>
            Indicates that initialize process has been completed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.UpdateException">
            <summary>
            Indicates that an exception has occured during index updating process.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.QueryException">
            <summary>
            Indicates that an exception has occured while querying an index.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.ResolveEntriesException">
            <summary>
            Indicates that an exception has occured while resolving data item from index entries. 
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.DisposeException">
            <summary>
            Indicates that an exception has occured while disposing index resources. 
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.InitializeException">
            <summary>
            Indicates that an exception has occured while initializing an process. 
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.IndexInformationIsUnavailable">
            <summary>
            Indicates that information about specific index can not be retrieved.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.SpellUpdateException">
            <summary>
            Indicates that the exception has occured while updating spell dictionary.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.CacheAddItem">
            <summary>
            Indicates that item is added to the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.CacheUpdateItem">
            <summary>
            Indicates that item is updated in the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.CacheRemoveItem">
            <summary>
            Indicates that item is removed from the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.CacheGetItem">
            <summary>
            Indicates that item is gotten from the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.CacheDoesNotContainItem">
            <summary>
            Indicates that item is not found in the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Management.Logging.LogEntryMessageStandardCode.CacheClear">
            <summary>
            Indicates that cache is cleared.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogEntry">
            <summary>
            Represents a single log entry.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogEntry.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogEntry.#ctor(Dynamicweb.Searching.Management.Logging.LogEntryMessageType,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="type">Message type.</param>
            <param name="code">Message code.</param>
            <param name="state">Environment state.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogEntry.#ctor(Dynamicweb.Searching.Management.Logging.LogEntryMessageType,System.String,System.Object)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="type">Message type.</param>
            <param name="message">Message text.</param>
            <param name="state">Environment state.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogEntry.Type">
            <summary>
            Gets or sets the message type.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogEntry.Code">
            <summary>
            Gets or sets the message code.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogEntry.State">
            <summary>
            Gets or sets the custom object that represents the state of the environment.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogEntry.Message">
            <summary>
            Gets or sets the custom message for this log entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogEntry.Index">
            <summary>
            Gets or sets the relative path to the index that the entry corresponds to.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogEntry.TimeStamp">
            <summary>
            Gets or sets the time stamp of this log entry.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogProviderInfo">
            <summary>
            Provides information about single log provider.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProviderInfo.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderInfo.ID">
            <summary>
            Gets the ID of the provider.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderInfo.Name">
            <summary>
            Gets the name of the provider.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderInfo.Constraints">
            <summary>
            Gets or sets the list of indexes managed by the log provider.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProviderInfo.IsUIVisible">
            <summary>
            Gets value indicating whether log provider is visible in the backend UI.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Logging.LogProvider">
            <summary>
            Provides functionality for handling events.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProvider.Clear">
            <summary>
            Clears any buffered output of the log.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProvider.Flush">
            <summary>
            Writes any buffered output to persistent medium.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProvider.Write(Dynamicweb.Searching.Management.Logging.LogEntry)">
            <summary>
            Writes a new log entry to the persistent medium.
            </summary>
            <param name="entry">Entry to write</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProvider.Write(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.Management.Logging.LogEntry})">
            <summary>
            Writes a range of log entries to persistent medium.
            </summary>
            <param name="entries">Entries to write.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Logging.LogProvider.GetEntries(System.Int32)">
            <summary>
            Gets a list of all log entries currently written by the current log provider.
            </summary>
            <param name="max">Maximum number of entries to retrieve.</param>
            <returns>A list of all log entries currently written by the current log provider.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProvider.IsBuffered">
            <summary>
            Gets value indicating whether log output is buffered.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Logging.LogProvider.Info">
            <summary>
            Gets the information about the current log provider.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Management.Configuration.ConfigurationSettingAttribute">
            <summary>
            Indicates that the target property represents a configuration setting.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Management.Configuration.ConfigurationSettingAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="key">Setting key.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Management.Configuration.ConfigurationSettingAttribute.Key">
            <summary>
            Gets the setting key.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.Path">
            <summary>
            Provides helper methods for operating with directory.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.MapPath(System.String)">
            <summary>
            Returns the physical file path that corresponds to the specified virtual path.
            </summary>
            <param name="path">Virtual path.</param>
            <returns>Physical path.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.Combine(System.String,System.String)">
            <summary>
            Combines two virtual paths.
            </summary>
            <param name="first">First path.</param>
            <param name="second">Second path.</param>
            <returns>Combined path.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.CombinePhysical(System.String,System.String)">
            <summary>
            Combines two physical paths.
            </summary>
            <param name="first">First path.</param>
            <param name="second">Second path.</param>
            <returns>Combined path.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.Combine(System.String,System.String,System.String)">
            <summary>
            Combines two paths.
            </summary>
            <param name="first">First path.</param>
            <param name="second">Second path.</param>
            <param name="separator">Path separator.</param>
            <returns>Combined path.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.CombineAndCreate(System.String,System.String)">
            <summary>
            Combines two virtual paths.
            </summary>
            <param name="first">First part of the path.</param>
            <param name="second">Second part of the path.</param>
            <returns>Combined path.</returns>
            <remarks>The method guarantees that generated path exists.</remarks>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.CombineAndCreatePhysical(System.String,System.String)">
            <summary>
            Combines two virtual paths and returns the physical location.
            </summary>
            <param name="first">First part of the path.</param>
            <param name="second">Second part of the path.</param>
            <returns>Combined path.</returns>
            <remarks>The method guarantees that generated path exists.</remarks>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.Path.TryCreateDirectory(System.String)">
            <summary>
            Creates a new directory. If the creation fails no exception is thrown.
            </summary>
            <param name="directory">Virtual path of the directory.</param>
            <returns>Value indicating whether directory has been created.</returns>
        </member>
        <member name="T:Dynamicweb.Searching.Internal.IndexWriterEx">
            <summary>
            The class provides extension methods for the Lucene.Net IndexWriter class.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Internal.IndexWriterEx.SyncLock">
            <summary>
            Used to synchronized access to the object from multiple threads.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexWriterEx.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="directory">Index directory.</param>
            <param name="analyzer">Analyzer used to process text.</param>
            <param name="createNew">Indicates whether to create new index.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexWriterEx.UpdateEntry(Dynamicweb.Searching.IndexEntry,System.Boolean)">
            <summary>
            Updates specified entry.
            </summary>
            <param name="entry">Entry to update.</param>
            <param name="createSummaryField">Indicates whether to create summary field which holds all entry content.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexWriterEx.AddEntry(Dynamicweb.Searching.IndexEntry,System.Boolean)">
            <summary>
            Adds the entry to the Lucene index.
            </summary>
            <param name="entry">Corresponding entry.</param>
            <param name="createSummaryField">Indicates whether to create summary field which holds all entry content.</param>
            <returns>Created document.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexWriterEx.DeleteEntry(Dynamicweb.Searching.IndexEntry)">
            <summary>
            Deletes specified entry.
            </summary>
            <param name="entry">Entry to delete.</param>
            <returns>Number of deleted entries.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexWriterEx.DeleteEntry(Dynamicweb.Searching.IndexerQueueItemSelector)">
            <summary>
            Deletes specified entry by a given selector.
            </summary>
            <param name="selector">Selector to use.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Internal.IndexWriterEx.Dispose">
            <summary>
            Disposes the writer.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2">
            <summary>
            Represents a search result of a bulk search.
            </summary>
            <typeparam name="TKey">Key type.</typeparam>
            <typeparam name="TResult">Index entry type.</typeparam>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2.#ctor(System.Collections.Generic.IDictionary{`0,Dynamicweb.Searching.Queries.SearchResult{`1}})">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="data">Search data.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2.GetResult(`0)">
            <summary>
            Returns a specific search result set. 
            </summary>
            <param name="key">Result set key.</param>
            <returns>Existing result set or null (Nothing in Visual Basic) if the given result set cannot be found.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2.Data">
            <summary>
            Gets the search data.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2.Keys">
            <summary>
            Gets the list of result sets keys.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.BulkQuerySearchResult`2.Results">
            <summary>
            Gets the list of actual result sets.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.ManualFilterCriteria">
            <summary>
            Represents a manual filter criteria.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.SearchQueryElement">
            <summary>
            Represents a generic search query element.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQueryElement.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQueryElement.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQueryElement.CompileChildren(Dynamicweb.Searching.Queries.ICompositeElement)">
            <summary>
            Compiles child elements of the specified parent element.
            </summary>
            <param name="item">Parent element whose child elements to translate.</param>
            <returns>A string representation of the search query child elements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQueryElement.NormalizeCompiledQuery(System.String)">
            <summary>
            Fixes some query warnings.
            </summary>
            <param name="query">Query to fix.</param>
            <returns>Fixed query.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQueryElement.Parent">
            <summary>
            Gets or sets the parent query element.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQueryElement.Root">
            <summary>
            Gets the root query element.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.ManualFilterCriteria.#ctor(System.Predicate{Dynamicweb.Searching.Queries.SearchResultEntryContext})">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="predicate">The method that determines whether the given index entry can be selected.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="predicate">predicate</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.ManualFilterCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.ManualFilterCriteria.Predicate">
            <summary>
            Gets the method that determines whether the given index entry can be selected.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria">
            <summary>
            Represents a fuzzy search criteria based on the Levenshtein Distance.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.Criteria">
            <summary>
            Represents a simple field criteria.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.Criteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.Criteria.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field. If omited the default field will be used.</param>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.Criteria.#ctor(System.String,System.Object,Dynamicweb.Searching.Queries.Criterias.CriteriaExistanceConstraint)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field. If omited the default field will be used.</param>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="constraint">The existance constraint which is applied to the current criteria.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.Criteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.Criteria.ExistanceConstraint">
            <summary>
            Gets or sets the existance constraint which is applied to the current criteria.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.Criteria.FieldName">
            <summary>
            Gets or sets the name of the field. If omited the default field will be used.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.Criteria.FieldValue">
            <summary>
            Gets or sets the keyword (or phrase) to search for.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.Criteria.IsWildCardCriteria">
            <summary>
            Gets value indicating whether current criteria is wildcard-criteria.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.Criteria.IsValidWildCardCriteria">
            <summary>
            Gets value indicating whether current wildcard-criteria is valid.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="similarity">The similarity ratio (between 0.0 and 1.0).</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria.#ctor(System.String,System.String,System.Double)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field. If omited the default field will be used.</param>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="similarity">The similarity ratio (between 0.0 and 1.0).</param>
            <exception cref="T:System.ArgumentException">Occurs when incorrect similarity has been specified (should be between 0.0 and 1.0).</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.FuzzyCriteria.Similarity">
            <summary>
            Gets or sets the similarity ratio (between 0.0 and 1.0).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.LimitCriteria">
            <summary>
            Allows limiting the result set.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.Empty">
            <summary>
            Represents a limit criteria that requests an empty result set.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="offset">The starting position of the desired result frame.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="offset">The starting position of the desired result frame.</param>
            <param name="size">The size (number of records) of the result frame.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.Offset">
            <summary>
            Gets or sets the starting position of the desired result frame.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.LimitCriteria.Size">
            <summary>
            Gets or sets the size (number of records) of the result frame.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.ProximityCriteria">
            <summary>
            Represents a proximity criteria (finding words that are within a specific distance away).
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.ProximityCriteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.ProximityCriteria.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="distance">The distance (in words).</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.ProximityCriteria.#ctor(System.String,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field. If omited the default field will be used.</param>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="distance">The distance (in words).</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.ProximityCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.ProximityCriteria.Distance">
            <summary>
            Gets or sets the distance (in words).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.SortDirection">
            <summary>
            Represents a sor direction of the search results.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.SortDirection.Ascending">
            <summary>
            Sort results ascending.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.SortDirection.Descending">
            <summary>
            Sort results descending.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria">
            <summary>
            Represents a "Order by" criteria.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria.FIELD_SCORE_NAME">
            <summary>
            Gets the the value of the page size representing a page which is as large as possible to accept all items.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field to sort results by.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria.#ctor(System.String,Dynamicweb.Searching.Queries.Criterias.SortDirection)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field to order results by.</param>
            <param name="direction">Sort direction.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria.FieldName">
            <summary>
            Gets the name of the field to order results by.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.OrderByCriteria.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.ICompositeElement">
            <summary>
            Represents a contract that all composite search query elements (like groups) must implement.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.ICompositeElement.Add(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Adds new element to the list of child elements.
            </summary>
            <param name="item">Element to add.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.ICompositeElement.Remove(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Removes specified element from the list of child elements.
            </summary>
            <param name="item">Element to remove.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.ICompositeElement.RemoveAt(System.Int32)">
            <summary>
            Removes element specified by the index.
            </summary>
            <param name="index">Zero-based index of an element.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.ICompositeElement.Elements">
            <summary>
            Gets the list of child elements.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.ICompositeElement.Count">
            <summary>
            Gets the number of top-level child elements.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.IndexEntrySelectingEventArgs">
            <summary>
            Provides information about the index entry that is being selected by using the query.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.IndexEntrySelectingEventArgs.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.IndexEntrySelectingEventArgs.GetValue(System.String)">
            <summary>
            Returns the index entry value with the given name.
            </summary>
            <param name="name">Entry field name.</param>
            <returns>Entry field value.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.IndexEntrySelectingEventArgs.Entry">
            <summary>
            Gets the entry being selected.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.IndexEntrySelectingEventArgs.Select">
            <summary>
            Gets or sets value indicating whether the entry is included into the result set.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.SearchQuery">
            <summary>
            Represents a search query.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.SearchQuery.SpecialCharaters">
            <summary>
            Gets the list of special characters.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="defaultFieldName">The name of the default field.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.#ctor(Dynamicweb.Searching.Queries.SearchQueryElement[])">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="content">Element content.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.#ctor(System.String,Dynamicweb.Searching.Queries.SearchQueryElement[])">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="defaultFieldName">The name of the default field.</param>
            <param name="content">Element content.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Add(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Adds new element to the list of child elements.
            </summary>
            <param name="item">Element to add.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Remove(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Removes specified element from the list of child elements.
            </summary>
            <param name="item">Element to remove.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.RemoveAt(System.Int32)">
            <summary>
            Removes element specified by the index.
            </summary>
            <param name="index">Zero-based index of an element.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.GetEnumerator">
            <summary>
            Retrieves an enumerator that iterates through the list of child elements.
            </summary>
            <returns>An enumerator that iterates through the list of child elements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Retrieves an enumerator that iterates through the list of child elements.
            </summary>
            <returns>An enumerator that iterates through the list of child elements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.ParseQuery(System.String)">
            <summary>
            Parses specified query.
            </summary>
            <param name="queryText">Query text.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.OnSelecting(Dynamicweb.Searching.Queries.IndexEntrySelectingEventArgs)">
            <summary>
            Raises "Selecting" event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.PreCompile">
            <summary>
            Precompiles the query by parsing "Order by" and "Limit" criteria only.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Reset">
            <summary>
            Resets the state of the query.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Reset(System.Boolean)">
            <summary>
            Resets the state of the query.
            </summary>
            <param name="clearPersistentState">Value indicating whether to clear query state.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.GetQueryKey(System.Object)">
            <summary>
            Returns the key for a given query.
            </summary>
            <returns>The key for a given query.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.RegisterManualFilter(Dynamicweb.Searching.Queries.Criterias.ManualFilterCriteria)">
            <summary>
            Registers manual filter criteria.
            </summary>
            <param name="filter">Manual filter criteria.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.PreCompile(System.Collections.Generic.IEnumerable{Dynamicweb.Searching.Queries.SearchQueryElement})">
            <summary>
            Precompiles the given elements.
            </summary>
            <param name="elements">Elements to precompile.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Escape(System.String)">
            <summary>
            Performs escaping of special charaters.
            </summary>
            <param name="value">Value to escape.</param>
            <returns>Escaped value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Wrap(System.String)">
            <summary>
            Wraps the value into the double quotes.
            </summary>
            <param name="value">Value to wrap.</param>
            <returns>Wrapped value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Wrap(System.String,System.Boolean)">
            <summary>
            Wraps the value into the double quotes.
            </summary>
            <param name="value">Value to wrap.</param>
            <param name="force">Wraps the value even if it doesn't contain spaces.</param>
            <returns>Wrapped value.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Normalize(System.String)">
            <summary>
            Removes spaces, quotes or any punctuation from the beginning and ending of the specified term.
            </summary>
            <param name="term">Term to normalize.</param>
            <returns>Normalized term.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Parse(System.String)">
            <summary>
            Returns a query parsed from the specified textual representation.
            </summary>
            <param name="queryText">Query text.</param>
            <returns>A new query based on the specified query text.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.Combine(Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType,Dynamicweb.Searching.Queries.SearchQueryElement[])">
            <summary>
            Combines the given elements using the given separator.
            </summary>
            <param name="separator">Separator.</param>
            <param name="contents">Elements.</param>
            <returns>Combined query.</returns>
        </member>
        <member name="E:Dynamicweb.Searching.Queries.SearchQuery.Selecting">
            <summary>
            Occurs when the next index entry is being selected.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.DefaultFieldName">
            <summary>
            Gets or sets the name of the default field.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.Parent">
            <summary>
            Gets the parent query element.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.Elements">
            <summary>
            Gets the list of child elements.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.Count">
            <summary>
            Gets the number of top-level child elements.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.Offset">
            <summary>
            Gets or sets the starting position of the desired result frame.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.Size">
            <summary>
            Gets or sets the size (number of records) of the result frame.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.IsParsed">
            <summary>
            Gets value indicating whether current query has been parsed from the textual representation.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.IsScalar">
            <summary>
            Gets or sets the value indicating whether to only estimate the total number of results that can be produced by this query without retrieving the actual results.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.OrderBy">
            <summary>
            Gets or sets the list of fields to order results by.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.State">
            <summary>
            Gets the custom query state.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.CanRaiseSelecting">
            <summary>
            Gets value indicating whether "Selecting" event can be raised.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.ManualFilter">
            <summary>
            Gets the list of manual sort criteria.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.ManualFilterContext">
            <summary>
            Gets the manual filter context bindings.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder">
            <summary>
            Represents a query key builder.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.#ctor(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="query">Search query.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetKey">
            <summary>
            Returns the key of a current query.
            </summary>
            <param name="customState">Custom query state.</param>
            <returns>The key of a current query.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetKey(System.Object)">
            <summary>
            Returns the key of a current query.
            </summary>
            <param name="customState">Custom query state.</param>
            <returns>The key of a current query.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetKeyInternal(System.Object)">
            <summary>
            Returns the key of a current query.
            </summary>
            <param name="customState">Custom state.</param>
            <returns>The key of a current query.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetQueryElementKey(Dynamicweb.Searching.Queries.ICompositeElement)">
            <summary>
            Returns the key for a given query element.
            </summary>
            <param name="element">Query element.</param>
            <returns>The key for a given query element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetQueryElementKey(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Returns the key for a given query element.
            </summary>
            <param name="element">Query element.</param>
            <returns>The key for a given query element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetKey(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Returns the key of a given query.
            </summary>
            <param name="query">Search query.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.GetKey(Dynamicweb.Searching.Queries.SearchQuery,System.Object)">
            <summary>
            Returns the key of a given query.
            </summary>
            <param name="query">Search query.</param>
            <param name="customState">Custom query state.</param>
            <returns></returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.Key">
            <summary>
            Gets or sets the current query key.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.Query">
            <summary>
            Gets or sets the search query.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.EncounteredLimitCriterion">
            <summary>
            Gets or sets value indicating whether builder has encountered the "limit" criterion within the query.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchQuery.QueryKeyBuilder.EncounteredOrderByCriterion">
            <summary>
            Gets or sets value indicating whether builder has encountered the "order by" criterion within the query.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.BoostCriteria">
            <summary>
            Represents a term boost criteria.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.BoostCriteria.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.BoostCriteria.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="boost">Boost factor.</param>
            <exception cref="T:System.ArgumentException">Occurs if the boost factor is invalid (for example the boost factor is negative).</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.BoostCriteria.#ctor(System.String,System.String,System.Double)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field. If omited the default field will be used.</param>
            <param name="fieldValue">The keyword (or phrase) to search for.</param>
            <param name="boost">Boost factor.</param>
            <exception cref="T:System.ArgumentException">Occurs if the boost factor is invalid (for example the boost factor is negative).</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.BoostCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.BoostCriteria.Boost">
            <summary>
            Gets the boost factor (default is 1.0).
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType">
            <summary>
            Represents a criteria separator type.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType.Default">
            <summary>
            Use default combination operator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType.And">
            <summary>
            Combine expressions using logical "AND" operator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType.Or">
            <summary>
            Combine expressions using logical "OR" operator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType.Not">
            <summary>
            Combine expressions using logical "NOT" operator.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator">
            <summary>
            Represents a criteria separator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator.And">
            <summary>
            Get the logical "AND" separator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator.Or">
            <summary>
            Gets the logical "OR" separator.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator.#ctor(Dynamicweb.Searching.Queries.Criterias.CriteriaSeparatorType)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="separatorType">Desired separator type.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.CriteriaSeparator.SeparatorType">
            <summary>
            Gets or sets desired separator type.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.CriteriaExistanceConstraint">
            <summary>
            Represents a criteria existance constraint.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaExistanceConstraint.UnSpecified">
            <summary>
            Don't apply any existance constraints.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaExistanceConstraint.Required">
            <summary>
            All search results must match specified criteria.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Queries.Criterias.CriteriaExistanceConstraint.Prohibited">
            <summary>
            All search results must not match specified criteria.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup">
            <summary>
            Represents a criteria group.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.#ctor(System.String)">
            <summary>
            Initializes a new insntance of an object.
            </summary>
            <param name="fieldName">The name of the field to group inner expressions by.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.#ctor(Dynamicweb.Searching.Queries.SearchQueryElement[])">
            <summary>
            Initializes a new insntance of an object.
            </summary>
            <param name="content">Group content.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.#ctor(System.String,Dynamicweb.Searching.Queries.SearchQueryElement[])">
            <summary>
            Initializes a new insntance of an object.
            </summary>
            <param name="fieldName">The name of the field to group inner expressions by.</param>
            <param name="content">Group content.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.Add(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Adds new element to the list of child elements.
            </summary>
            <param name="item">Element to add.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.Remove(Dynamicweb.Searching.Queries.SearchQueryElement)">
            <summary>
            Removes specified element from the list of child elements.
            </summary>
            <param name="item">Element to remove.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.RemoveAt(System.Int32)">
            <summary>
            Removes element specified by the index.
            </summary>
            <param name="index">Zero-based index of an element.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.GetEnumerator">
            <summary>
            Retrieves an enumerator that iterates through the list of child elements.
            </summary>
            <returns>An enumerator that iterates through the list of child elements.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Retrieves an enumerator that iterates through the list of child elements.
            </summary>
            <returns>An enumerator that iterates through the list of child elements.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.Boost">
            <summary>
            Gets or Sets a boost factor.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.FieldName">
            <summary>
            Gets or sets the name of the field to group inner expressions by.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.Elements">
            <summary>
            Gets the list of child elements.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.CriteriaGroup.Count">
            <summary>
            Gets the number of top-level child elements.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.Criterias.RangeCriteria">
            <summary>
            Represents a range criteria.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="lowerBound">The lower bound of this range.</param>
            <param name="upperBound">the upper bound of this range.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.#ctor(System.Object,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="lowerBound">The lower bound of this range.</param>
            <param name="upperBound">the upper bound of this range.</param>
            <param name="includeBoundValues">Value indicating whether to include bound values into the range.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <param name="lowerBound">The lower bound of this range.</param>
            <param name="upperBound">the upper bound of this range.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.#ctor(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <param name="lowerBound">The lower bound of this range.</param>
            <param name="upperBound">the upper bound of this range.</param>
            <param name="includeBoundValues">Value indicating whether to include bound values into the range.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.LowerBound">
            <summary>
            Gets or sets the lower bound of this range.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.UpperBound">
            <summary>
            Gets or sets the upper bound of this range.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.Criterias.RangeCriteria.IncludeBoundValues">
            <summary>
            Gets or sets value indicating whether to include bound values into the range.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">
            <summary>
            Represents an exception that can be thrown during compiling a search query into a native language of the search engine.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchQueryCompileException.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.SearchResult`1">
            <summary>
            Represents a search result.
            </summary>
            <typeparam name="T">Index entry type.</typeparam>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchResult`1.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchResult`1.Total">
            <summary>
            Gets or sets the total number of results available.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchResult`1.Items">
            <summary>
            Gets or sets the result frame currently available.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.GeneralSearchResult">
            <summary>
            Represents a general search result.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.SearchResultEntryContext">
            <summary>
            Represents a search result entry context.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchResultEntryContext.#ctor(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="query">Corresponding search query.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="query">query</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.SearchResultEntryContext.GetValue(System.String)">
            <summary>
            Returns the index entry value with the given name.
            </summary>
            <param name="name">Entry field name.</param>
            <returns>Entry field value.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchResultEntryContext.Entry">
            <summary>
            Gets the current index entry.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchResultEntryContext.Query">
            <summary>
            Gets the corresponding search query.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.SearchResultEntryContext.State">
            <summary>
            Gets or sets the custom state.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Queries.VolatileQueryElement">
            <summary>
            Represents a volatile query element. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.#ctor(System.Func{System.Boolean,Dynamicweb.Searching.Queries.SearchQueryElement})">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="selector">A function that is used to select next elements.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="selector">selector</paramref> is null.</exception>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current one.
            </summary>
            <param name="obj">Object to compare to.</param>
            <returns>Value indicating whether the specified object is equal to the current one.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.GetHashCode">
            <summary>
            Returns a hash code of the current object.
            </summary>
            <returns>A hash code of the current object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.ToString">
            <summary>
            Returns a string representation of the current object.
            </summary>
            <returns>String representation of the current object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.Compile">
            <summary>
            Compiles current search query element into the native query of the specified interpreter.
            </summary>
            <exception cref="T:Dynamicweb.Searching.Queries.SearchQueryCompileException">Occured when there is an error compiling the current element.</exception>
            <returns>A string representation of the current search query element.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.Dispose">
            <summary>
            Disposes all managed resources used by this object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.MoveNext">
            <summary>
            Advances the volatile element to the next actual element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Searching.Queries.VolatileQueryElement.Reset">
            <summary>
            Brings the volatile element back to its initial state.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.VolatileQueryElement.Current">
            <summary>
            Gets the current actual query element.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.VolatileQueryElement.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current actual query element.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Queries.VolatileQueryElement.Selector">
            <summary>
            Gets the function that selects next element.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.RAMIndexManager">
            <summary>
            Allows indexing of items in memory.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.IAnalysisProvider">
            <summary>
            Allows to get index analyzer used for indexing.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.PrepareIndex">
            <summary>
            Write index in memory
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.IndexEntries">
            <summary>
            Creates new index entries.
            </summary>
            <returns>New entries that needs to be put into the index.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.QueryIndex``1(Dynamicweb.Searching.Queries.SearchQuery)">
            <summary>
            Performs a search on the specified index.
            </summary>
            <param name="query">Query object.</param>
            <returns>Search results.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.GetSort(System.Collections.Generic.IDictionary{System.String,Dynamicweb.Searching.Queries.Criterias.SortDirection})">
            <summary>
            Retrieves a sort object.
            </summary>
            <param name="orderBy">A list of "order by" expressions.</param>
            <returns>A sort object.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.GetAnalyzer">
            <summary>
            Retrieves an index analyzer used for indexing.
            </summary>
            <returns>An index analyzer used for indexing.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.GetAnalysisOptions">
            <summary>
            Retrieves analysis options used for indexing.
            </summary>
            <returns>The analysis options  used for indexing.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.RAMIndexManager.Dispose">
            <summary>
            Disposes the indexer.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.ISchemaNode">
            <summary>
            Provides basic functionality for all schema nodes.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.ISchemaNode.Name">
            <summary>
            Gets or sets the node name.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.ISchemaNode.TypeName">
            <summary>
            Gets or sets the type name.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaDefinitionExpandableAttribute">
            <summary>
            Indicates that the target property is an index entry schema element.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionExpandableAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="format">The format of an item field.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionExpandableAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="format">The format of an item field.</param>
            <param name="itemType">Item field type.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaDefinitionExpandableAttribute.Format">
            <summary>
            Gets the format of an item field.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaDefinitionExpandableAttribute.ItemType">
            <summary>
            Gets the type of the item field.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaNodeAttributes">
            <summary>
            Represents attributes applied to a single schema node.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Schemas.SchemaNodeAttributes.None">
            <summary>
            No attributes are set.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Schemas.SchemaNodeAttributes.Obsolete">
            <summary>
            The corresponding schema node is obsolete and shouldn't be used.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaNode">
            <summary>
            Represents a schema node.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNode.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNode.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">Node name</param>
            <param name="typeName">Node type name.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNode.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">Node name</param>
            <param name="nodeType">Node type.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNode.GetNodeType">
            <summary>
            Gets the refenrece to the Type object representing the node type.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.Name">
            <summary>
            Gets or sets the name of the node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.TypeName">
            <summary>
            Gets or sets the type name of the schema node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.Attributes">
            <summary>
            Gets or sets attributes applied for the given schema node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.ExpandableOptions">
            <summary>
            Gets or sets the expandable options for this node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.IsEditableType">
            <summary>
            Gets value indicating whether node type represents either one of the primitive types or a date.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.IsRangeType">
            <summary>
            Gets value indicating whether node type represents a type that can be used in a range queries.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNode.IsTextType">
            <summary>
            Gets value indicating whether node type represents a text node.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaParseException">
            <summary>
            Represents an exception which is thrown when the schema parse process fails.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaParseException.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.Schema">
            <summary>
            Represents an index schema.
            </summary>
        </member>
        <member name="F:Dynamicweb.Searching.Schemas.Schema.SyncLock">
            <summary>
            Used to synchronize access to the object from multiple threads.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.Find(System.String)">
            <summary>
            Finds the node with specified name.
            </summary>
            <param name="name">Node name.</param>
            <returns>A matched node.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.TryParse(System.Type,System.String)">
            <summary>
            Parses the schema from the specified type.
            </summary>
            <param name="t">Type to parse schema from.</param>
            <param name="path">Relative path to the index.</param>
            <returns>Parsed schema or null (Nothing in Visual Basic) if the schema can not be parsed.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.ParseInternal(System.Type,System.String)">
            <summary>
            Parses the schema from the specified type.
            </summary>
            <param name="t">Type to parse schema from.</param>
            <param name="path">Relative path to the index.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.AddElements(Dynamicweb.Searching.Schemas.ISchemaNode,Dynamicweb.Searching.Schemas.SchemaNode,System.Type,System.String)">
            <summary>
            Adds schema elements to the specified schema node.
            </summary>
            <param name="node">Schema node to add elements to.</param>
            <param name="parent">Parent node.</param>
            <param name="t">Object type.</param>
            <param name="path">Index path to examine on a schema definition.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.GetDefinition(System.Type)">
            <summary>
            Retrieves a schema definition attribute.
            </summary>
            <param name="t">Type to retrieve schema definition attribute from.</param>
            <returns>Retrieved attribute or null (Nothing in Visual Basic) if the attribute can't be retrieved.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.GetDefinitionElement(System.Reflection.PropertyInfo)">
            <summary>
            Retrieves a schema definition element attribute.
            </summary>
            <param name="prop">Property to retrieve schema definition element attribute from.</param>
            <returns>Retrieved attribute or null (Nothing in Visual Basic) if the attribute can't be retrieved.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.GetIsObsolete(System.Reflection.PropertyInfo)">
            <summary>
            Gets value indicating whether the given property is marked as obsolete.
            </summary>
            <param name="prop">Property to examine.</param>
            <returns>Value indicating whether the given property is marked as obsolete.</returns>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.Schema.GetExpandable(System.Reflection.PropertyInfo)">
            <summary>
            Retrieves a schema definition expandable element attribute.
            </summary>
            <param name="prop">Property to retrieve schema definition expandable element attribute from.</param>
            <returns>Retrieved attribute or null (Nothing in Visual Basic) if the attribute can't be retrieved.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.Name">
            <summary>
            Gets or sets the name of the node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.TypeName">
            <summary>
            Gets or sets the type name of the schema node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.Nodes">
            <summary>
            Gets or sets the list of child nodes of this node.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.RelevantNodes">
            <summary>
            Gets the list of all relevant nodes.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.EditableNodes">
            <summary>
            Gets the editable nodes (nodes whose types represent either one of the primitive types or a date).
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.RangeNodes">
            <summary>
            Gets the range nodes (nodes whose values can be used in a range queries).
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.Schema.TextNodes">
            <summary>
            Gets the text nodes.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaDefinitionAttribute">
            <summary>
            Indicates that the target object represents an index entry schema.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionAttribute.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="path">The relative path to the target index.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaDefinitionAttribute.Path">
            <summary>
            Gets the relative path to the target index.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaDefinitionElementAttribute">
            <summary>
            Indicates that the target property is an index entry schema element.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionElementAttribute.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionElementAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaDefinitionElementAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="actualType">The actual type of the element.</param>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaDefinitionElementAttribute.Name">
            <summary>
            Gets the name of the element.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaDefinitionElementAttribute.ActualType">
            <summary>
            Get the actual type of the element.
            </summary>
        </member>
        <member name="T:Dynamicweb.Searching.Schemas.SchemaNodeExpandableOptions">
            <summary>
            Specifies how the certain schem node expands into a several dynamically-generated nodes.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNodeExpandableOptions.#ctor">
            <summary>
            Initializes a new instance of an object.
            </summary>
        </member>
        <member name="M:Dynamicweb.Searching.Schemas.SchemaNodeExpandableOptions.GetItemType">
            <summary>
            Gets the Type instance of the item type.
            </summary>
            <returns>The Type instance of the item type.</returns>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNodeExpandableOptions.IsExpandable">
            <summary>
            Gets or sets value indicating whether schema node is expandable.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNodeExpandableOptions.Format">
            <summary>
            Gets or sets the format of the expandable item.
            </summary>
        </member>
        <member name="P:Dynamicweb.Searching.Schemas.SchemaNodeExpandableOptions.ItemTypeName">
            <summary>
            Gets or sets the actual type name of the expandable item.
            </summary>
        </member>
    </members>
</doc>
